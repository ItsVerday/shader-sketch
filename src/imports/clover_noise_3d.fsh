const float CLOVER_NOISE_3D_POINT_SPREAD=.2;const float CLOVER_NOISE_3D_PI=radians(180.);float clover_noise_3d_hash(vec3 A){return fract(1e4*sin(17.*A.x+A.y*0.1)*(0.1+abs(sin(A.y*13.+A.x-A.z))*sin(12.*A.z-sin(A.x*10.))));}vec3 clover_noise_3d_offset(vec3 A,float B){float C=B*CLOVER_NOISE_3D_PI*2000.;float D=(fract((floor(B*1000.)+.5)/100.)-.5)*CLOVER_NOISE_3D_PI/2.;float E=floor(B*10.+1.)*.1;vec3 F=vec3(sin(C)*cos(D),sin(D),cos(C)*cos(D))*E+.5;return A+F*CLOVER_NOISE_3D_POINT_SPREAD*2.+.5-CLOVER_NOISE_3D_POINT_SPREAD;}bool G(vec3 A,vec3 H,vec3 I,vec3 J,vec3 K,vec3 L,vec3 M,vec3 N,vec3 O,vec3 P){vec2 Q=A.yx-L.yx;vec2 R=Q*L.xy;vec2 S=R-Q*K.xy;vec2 T=R-Q*M.xy;vec3 U,V,W,X;if((S.y-S.x<0.&&A.x<L.x)||(T.y-T.x>0.&&A.x>=L.x)){vec2 Y=R-Q*O.xy;if(Y.y-Y.x>0.){U=K;V=N;W=O;X=L;}else{U=L;V=O;W=P;X=M;}}else{vec2 Z=R-Q*I.xy;if(Z.y-Z.x>0.){U=I;V=L;W=M;X=J;}else{U=H;V=K;W=L;X=I;}}vec3 a=U;vec3 b=W;vec3 c=X;vec3 d=U-W;vec3 e=A-U;if(e.x*d.y-e.y*d.x>0.){c=V;}vec2 f=b.xy-a.xy;vec2 g=c.xy-a.xy;vec2 h=A.xy-a.xy;float i=1./(f.x*g.y-g.x*f.y);float j=(h.x*g.y-g.x*h.y)*i;float k=(f.x*h.y-h.x*f.y)*i;float l=1.-j-k;return A.z<l*a.z+j*b.z+k*c.z;}float clover_noise_3d(vec3 A){vec3 m=floor(A);vec3 n=clover_noise_3d_offset(m,clover_noise_3d_hash(m));vec3 o=m+vec3(0,-1,-1);o=clover_noise_3d_offset(o,clover_noise_3d_hash(o));vec3 p=m+vec3(-1,0,-1);p=clover_noise_3d_offset(p,clover_noise_3d_hash(p));vec3 q=m+vec3(0,0,-1);q=clover_noise_3d_offset(q,clover_noise_3d_hash(q));vec3 r=m+vec3(1,0,-1);r=clover_noise_3d_offset(r,clover_noise_3d_hash(r));vec3 s=m+vec3(0,1,-1);s=clover_noise_3d_offset(s,clover_noise_3d_hash(s));vec3 t=m+vec3(-1,-1,0);t=clover_noise_3d_offset(t,clover_noise_3d_hash(t));vec3 u=m+vec3(0,-1,0);u=clover_noise_3d_offset(u,clover_noise_3d_hash(u));vec3 v=m+vec3(1,-1,0);v=clover_noise_3d_offset(v,clover_noise_3d_hash(v));vec3 w=m+vec3(-1,0,0);w=clover_noise_3d_offset(w,clover_noise_3d_hash(w));vec3 x=m+vec3(1,0,0);x=clover_noise_3d_offset(x,clover_noise_3d_hash(x));vec3 y=m+vec3(-1,1,0);y=clover_noise_3d_offset(y,clover_noise_3d_hash(y));vec3 z=m+vec3(0,1,0);z=clover_noise_3d_offset(z,clover_noise_3d_hash(z));vec3 AA=m+vec3(1,1,0);AA=clover_noise_3d_offset(AA,clover_noise_3d_hash(AA));vec3 AB=m+vec3(0,-1,1);AB=clover_noise_3d_offset(AB,clover_noise_3d_hash(AB));vec3 AC=m+vec3(-1,0,1);AC=clover_noise_3d_offset(AC,clover_noise_3d_hash(AC));vec3 AD=m+vec3(0,0,1);AD=clover_noise_3d_offset(AD,clover_noise_3d_hash(AD));vec3 AE=m+vec3(1,0,1);AE=clover_noise_3d_offset(AE,clover_noise_3d_hash(AE));vec3 AF=m+vec3(0,1,1);AF=clover_noise_3d_offset(AF,clover_noise_3d_hash(AF));bool AG=G(A.yzx,o.yzx,q.yzx,s.yzx,u.yzx,n.yzx,z.yzx,AB.yzx,AD.yzx,AF.yzx);bool AH=G(A.xzy,p.xzy,q.xzy,r.xzy,w.xzy,n.xzy,x.xzy,AC.xzy,AD.xzy,AE.xzy);bool AI=G(A,t,u,v,w,n,x,y,z,AA);vec3 U,V,W,X,AJ,a,b,c;if(AG){if(AH){if(AI){U=m+vec3(-1,-1,-1);V=t;W=p;X=w;AJ=o;a=u;b=q;c=n;U=clover_noise_3d_offset(U,clover_noise_3d_hash(U));}else{U=t;V=m+vec3(-1,-1,1);W=w;X=AC;AJ=u;a=AB;b=n;c=AD;V=clover_noise_3d_offset(V,clover_noise_3d_hash(V));}}else{if(AI){U=p;V=w;W=m+vec3(-1,1,-1);X=y;AJ=q;a=n;b=s;c=z;W=clover_noise_3d_offset(W,clover_noise_3d_hash(W));}else{U=w;V=AC;W=y;X=m+vec3(-1,1,1);AJ=n;a=AD;b=z;c=AF;X=clover_noise_3d_offset(X,clover_noise_3d_hash(X));}}}else{if(AH){if(AI){U=o;V=u;W=q;X=n;AJ=m+vec3(1,-1,-1);a=v;b=r;c=x;AJ=clover_noise_3d_offset(AJ,clover_noise_3d_hash(AJ));}else{U=u;V=AB;W=n;X=AD;AJ=v;a=m+vec3(1,-1,1);b=x;c=AE;a=clover_noise_3d_offset(a,clover_noise_3d_hash(a));}}else{if(AI){U=q;V=n;W=s;X=z;AJ=r;a=x;b=m+vec3(1,1,-1);c=AA;b=clover_noise_3d_offset(b,clover_noise_3d_hash(b));}else{U=n;V=AD;W=z;X=AF;AJ=x;a=AE;b=AA;c=m+vec3(1,1,1);c=clover_noise_3d_offset(c,clover_noise_3d_hash(c));}}}vec3 AK=U-c;vec3 e=A-U;vec3 AL=cross(AK,V-c)*e;float AM=AL.x+AL.y+AL.z;vec3 AN=cross(AK,W-c)*e;float AO=AN.x+AN.y+AN.z;vec3 AP=cross(AK,X-c)*e;float AQ=AP.x+AP.y+AP.z;vec3 AR=cross(AK,AJ-c)*e;float AS=AR.x+AR.y+AR.z;vec3 AT=cross(AK,a-c)*e;float AU=AT.x+AT.y+AT.z;vec3 AV=cross(AK,b-c)*e;float AW=AV.x+AV.y+AV.z;vec3 AX,AY,AZ,Aa;AX=U;AY=c;if(AM>0.&&AQ<=0.){AZ=V;Aa=X;}else if(AQ>0.&&AO<=0.){AZ=X;Aa=W;}else if(AO>0.&&AW<=0.){AZ=W;Aa=b;}else if(AW>0.&&AS<=0.){AZ=b;Aa=AJ;}else if(AS>0.&&AU<=0.){AZ=AJ;Aa=a;}else{AZ=a;Aa=V;}vec3 Ab=A-AX;vec3 Ac=A-AY;vec3 Ad=AY-AX;vec3 Ae=AZ-AX;vec3 Af=Aa-AX;vec3 Ag=AZ-AY;vec3 Ah=Aa-AY;float Ai=dot(Ac,cross(Ah,Ag));float Aj=dot(Ab,cross(Ae,Af));float Ak=dot(Ab,cross(Af,Ad));float Al=dot(Ab,cross(Ad,Ae));float Am=1./dot(Ad,cross(Ae,Af));float j=Ai*Am;float k=Aj*Am;float An=Ak*Am;float l=Al*Am;float Ao=l*l*l*(1.-j*k*An);float Ap=j*j*j*(1.-l*k*An);float Aq=k*k*k*(1.-j*l*An);float Ar=An*An*An*(1.-j*k*l);float As=Ao+Ap+Aq+Ar;Ao/=As;Ap/=As;Aq/=As;Ar/=As;float At=clover_noise_3d_hash(AX);float Au=clover_noise_3d_hash(AY);float Av=clover_noise_3d_hash(AZ);float Aw=clover_noise_3d_hash(Aa);return Ap*At+Aq*Au+Ar*Av+Ao*Aw;}float fractal_clover_noise_3d(vec3 A,int Ax){float Ay=0.;float Az=0.;float BA=1.;float BB=1.;for(int BC=0;BC<10;BC++){if(BC>=Ax){break;}Ay+=clover_noise_3d(A*BB)*BA;Az+=BA;BA*=.4;BB*=2.5;}return Ay/Az;}vec3 curl_clover_noise_3d(vec3 A){const float BD=0.01;float j=clover_noise_3d(A);float BE=clover_noise_3d(A+vec3(BD,0.,0.));float BF=clover_noise_3d(A+vec3(0.,BD,0.));float BG=clover_noise_3d(A+vec3(0.,0.,BD));return normalize(vec3(j-BE,j-BF,j-BG));}vec3 curl_fractal_clover_noise_3d(vec3 A,int Ax){const float BD=0.01;float j=fractal_clover_noise_3d(A,Ax);float BE=fractal_clover_noise_3d(A+vec3(BD,0.,0.),Ax);float BF=fractal_clover_noise_3d(A+vec3(0.,BD,0.),Ax);float BG=fractal_clover_noise_3d(A+vec3(0.,0.,BD),Ax);return normalize(vec3(j-BE,j-BF,j-BG));}