!function(e){var n={};function t(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var i in e)t.d(r,i,function(n){return e[n]}.bind(null,i));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){"use strict";t.r(n);var r={initShaderProgram:function(e,n,t){var i=r.loadShader(e,e.VERTEX_SHADER,n),o=r.loadShader(e,e.FRAGMENT_SHADER,t);if(null==i||null==o)return null;var a=e.createProgram();return e.attachShader(a,i),e.attachShader(a,o),e.linkProgram(a),e.getProgramParameter(a,e.LINK_STATUS)?a:(console.groupCollapsed("Shader Sketch Program Link Error"),console.error(e.getProgramInfoLog(a)),console.groupEnd(),null)},loadShader:function(e,n,t){var r=e.createShader(n);return e.shaderSource(r,t),e.compileShader(r),e.getShaderParameter(r,e.COMPILE_STATUS)?r:(console.groupCollapsed("Shader Sketch Shader Compilation Error"),console.error(e.getShaderInfoLog(r)),console.groupCollapsed("Shader Source..."),console.log(t),console.groupEnd(),console.groupEnd(),e.deleteShader(r),null)},parseUniformValues:function(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];return"string"==typeof n[0]&&(n[0]=n[0].replace(" ","").replace("[","").replace("]",""),n=n[0].split(",").map(parseFloat)),n[0]instanceof Array&&(n=n[0]),n}},i=r;function o(e){return function(e){if(Array.isArray(e)){for(var n=0,t=new Array(e.length);n<e.length;n++)t[n]=e[n];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function a(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var l={int:{length:1,int:!0,setter:"1i",aliases:["int","i","int1","i1","1int","1i"]},float:{length:1,int:!1,setter:"1f",aliases:["float","f","float1","f1","1float","1f"]},ivec2:{length:2,int:!0,setter:"2i",aliases:["int2","i2","2int","2i","vec2i","ivec2"]},vec2:{length:2,int:!1,setter:"2f",aliases:["float2","f2","2float","2f","vec2"]},ivec3:{length:3,int:!0,setter:"3i",aliases:["int3","i3","3int","3i","vec3i","ivec3"]},vec3:{length:3,int:!1,setter:"3f",aliases:["float3","f3","3float","3f","vec3"]},ivec4:{length:4,int:!0,setter:"4i",aliases:["int4","i4","4int","4i","vec4i","ivec4"]},vec4:{length:4,int:!1,setter:"4f",aliases:["float4","f4","4float","4f","vec4"]}},c=function(){function e(n,t){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.name=n,t=e.getType(t),this.type=t.type,this.arrayLength=t.arrayLength;for(var r=arguments.length,i=new Array(r>2?r-2:0),o=2;o<r;o++)i[o-2]=arguments[o];this.setValue.apply(this,i)}var n,t,r;return n=e,r=[{key:"getType",value:function(e){var n="unknown",t=-1,r=e.split("[");for(var i in r.length>1&&(r[1]=parseInt(r[1].replace("]","")),t=r[1]),l)l[i].aliases.indexOf(r[0])>-1&&(n=i);return{type:n,arrayLength:t}}},{key:"getValue",value:function(e,n){for(var t=arguments.length,r=new Array(t>2?t-2:0),o=2;o<t;o++)r[o-2]=arguments[o];for(var a=i.parseUniformValues.apply(i,r),c=l[e].length*(n>-1?n:1);a.length<c;)a.push(0);if(a=a.slice(0,c),l[e].int&&(a=a.map(Math.floor)),n>-1){for(var s=[];a.length>0;)s.push(a.splice(0,l[e].length));a=s}return a}}],(t=[{key:"setValue",value:function(){for(var n=arguments.length,t=new Array(n),r=0;r<n;r++)t[r]=arguments[r];this.value=e.getValue.apply(e,[this.type,this.arrayLength].concat(t))}},{key:"getUniformDeclaration",value:function(){return"uniform ".concat(this.type," ").concat(this.name).concat(this.arrayLength>-1?"[".concat(this.arrayLength,"]"):"",";")}},{key:"loadUniformLocation",value:function(e,n){this.location=e.getUniformLocation(n,this.name)}},{key:"setUniformValue",value:function(e){e["uniform".concat(l[this.type].setter).concat(this.arrayLength>-1?"v":"")].apply(e,[this.location].concat(o(this.value)))}}])&&a(n.prototype,t),r&&a(n,r),e}(),s={perlin_noise_2d:"\nvec4 perlin_noise_2d_permute(vec4 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\nvec2 perlin_noise_2d_fade(vec2 t) { return t*t*t*(t*(t*6.0-15.0)+10.0); }\n\nfloat perlin_noise_2d(vec2 P) {\nvec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);\nvec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);\nPi = mod(Pi, 289.0); // To avoid truncation effects in permutation\nvec4 ix = Pi.xzxz;\nvec4 iy = Pi.yyww;\nvec4 fx = Pf.xzxz;\nvec4 fy = Pf.yyww;\nvec4 i = perlin_noise_2d_permute(perlin_noise_2d_permute(ix) + iy);\nvec4 gx = 2.0 * fract(i * 0.0243902439) - 1.0; // 1/41 = 0.024...\nvec4 gy = abs(gx) - 0.5;\nvec4 tx = floor(gx + 0.5);\ngx = gx - tx;\nvec2 g00 = vec2(gx.x,gy.x);\nvec2 g10 = vec2(gx.y,gy.y);\nvec2 g01 = vec2(gx.z,gy.z);\nvec2 g11 = vec2(gx.w,gy.w);\nvec4 norm = 1.79284291400159 - 0.85373472095314 * \nvec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11));\ng00 *= norm.x;\ng01 *= norm.y;\ng10 *= norm.z;\ng11 *= norm.w;\nfloat n00 = dot(g00, vec2(fx.x, fy.x));\nfloat n10 = dot(g10, vec2(fx.y, fy.y));\nfloat n01 = dot(g01, vec2(fx.z, fy.z));\nfloat n11 = dot(g11, vec2(fx.w, fy.w));\nvec2 fade_xy = perlin_noise_2d_fade(Pf.xy);\nvec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);\nfloat n_xy = mix(n_x.x, n_x.y, fade_xy.y);\nreturn (2.3 * n_xy) / 2. + .5;\n}\n\nfloat fractal_perlin_noise_2d(vec2 p, int iterations) {\nfloat total = 0.;\nfloat divide = 0.;\n\nfloat scale = 1.;\n\nfor (int iter = 0; iter < 10; iter++) {\n    if (iter >= iterations) {\n        break;\n    }\n    \n    total += perlin_noise_2d(p / scale) * scale;\n    divide += scale;\n    \n    scale *= .5;\n}\n\nreturn total / divide;\n}\n\nvec2 curl_perlin_noise_2d(vec2 p) {\nconst float DX = 0.1;\n\nfloat v = perlin_noise_2d(p) * 2. - 1.;\nfloat x = perlin_noise_2d(p + vec2(DX, 0.)) * 2. - 1.;\nfloat y = perlin_noise_2d(p + vec2(0., DX)) * 2. - 1.;\nreturn normalize(vec2(v - x, v - y));\n}\n\nvec2 curl_fractal_perlin_noise_2d(vec2 p, int iterations) {\nconst float DX = 0.1;\n\nfloat v = fractal_perlin_noise_2d(p, iterations) * 2. - 1.;\nfloat x = fractal_perlin_noise_2d(p + vec2(DX, 0.), iterations) * 2. - 1.;\nfloat y = fractal_perlin_noise_2d(p + vec2(0., DX), iterations) * 2. - 1.;\nreturn normalize(vec2(v - x, v - y));\n}",perlin_noise_3d:"\nvec4 perlin_noise_3d_permute(vec4 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\nvec4 perlin_noise_3d_taylorInvSqrt(vec4 r) { return 1.79284291400159 - 0.85373472095314 * r; }\nvec3 perlin_noise_3d_fade(vec3 t) { return t*t*t*(t*(t*6.0-15.0)+10.0); }\n\nfloat perlin_noise_3d(vec3 P){\nvec3 Pi0 = floor(P); // Integer part for indexing\nvec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\nPi0 = mod(Pi0, 289.0);\nPi1 = mod(Pi1, 289.0);\nvec3 Pf0 = fract(P); // Fractional part for interpolation\nvec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\nvec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\nvec4 iy = vec4(Pi0.yy, Pi1.yy);\nvec4 iz0 = Pi0.zzzz;\nvec4 iz1 = Pi1.zzzz;\n\nvec4 ixy = perlin_noise_3d_permute(perlin_noise_3d_permute(ix) + iy);\nvec4 ixy0 = perlin_noise_3d_permute(ixy + iz0);\nvec4 ixy1 = perlin_noise_3d_permute(ixy + iz1);\n\nvec4 gx0 = ixy0 / 7.0;\nvec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\ngx0 = fract(gx0);\nvec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\nvec4 sz0 = step(gz0, vec4(0.0));\ngx0 -= sz0 * (step(0.0, gx0) - 0.5);\ngy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\nvec4 gx1 = ixy1 / 7.0;\nvec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\ngx1 = fract(gx1);\nvec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\nvec4 sz1 = step(gz1, vec4(0.0));\ngx1 -= sz1 * (step(0.0, gx1) - 0.5);\ngy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\nvec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\nvec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\nvec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\nvec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\nvec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\nvec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\nvec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\nvec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\nvec4 norm0 = perlin_noise_3d_taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\ng000 *= norm0.x;\ng010 *= norm0.y;\ng100 *= norm0.z;\ng110 *= norm0.w;\nvec4 norm1 = perlin_noise_3d_taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\ng001 *= norm1.x;\ng011 *= norm1.y;\ng101 *= norm1.z;\ng111 *= norm1.w;\n\nfloat n000 = dot(g000, Pf0);\nfloat n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\nfloat n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\nfloat n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\nfloat n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\nfloat n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\nfloat n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\nfloat n111 = dot(g111, Pf1);\n\nvec3 fade_xyz = perlin_noise_3d_fade(Pf0);\nvec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\nvec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\nfloat n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \nreturn (2.2 * n_xyz) / 2. + .5;\n}\n\nfloat fractal_perlin_noise_3d(vec3 p, int iterations) {\nfloat total = 0.;\nfloat divide = 0.;\n\nfloat scale = 1.;\n\nfor (int iter = 0; iter < 10; iter++) {\n    if (iter >= iterations) {\n        break;\n    }\n    \n    total += perlin_noise_3d(p / scale) * scale;\n    divide += scale;\n    \n    scale *= .5;\n}\n\nreturn total / divide;\n}\n\nvec3 curl_perlin_noise_3d(vec3 p) {\nconst float DX = 0.1;\n\nfloat v = perlin_noise_3d(p) * 2. - 1.;\nfloat x = perlin_noise_3d(p + vec3(DX, 0., 0.)) * 2. - 1.;\nfloat y = perlin_noise_3d(p + vec3(0., DX, 0.)) * 2. - 1.;\nfloat z = perlin_noise_3d(p + vec3(0., 0., DX)) * 2. - 1.;\nreturn normalize(vec3(v - x, v - y, v - x));\n}\n\nvec3 curl_fractal_perlin_noise_3d(vec3 p, int iterations) {\nconst float DX = 0.1;\n\nfloat v = fractal_perlin_noise_3d(p, iterations) * 2. - 1.;\nfloat x = fractal_perlin_noise_3d(p + vec3(DX, 0., 0.), iterations) * 2. - 1.;\nfloat y = fractal_perlin_noise_3d(p + vec3(0., DX, 0.), iterations) * 2. - 1.;\nfloat z = fractal_perlin_noise_3d(p + vec3(0., 0., DX), iterations) * 2. - 1.;\nreturn normalize(vec3(v - x, v - y, v - z));\n}",perlin_noise_4d:"\nvec4 perlin_noise_4d_permute(vec4 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\nvec4 perlin_noise_4d_taylorInvSqrt(vec4 r) { return 1.79284291400159 - 0.85373472095314 * r; }\nvec4 perlin_noise_4d_fade(vec4 t) { return t*t*t*(t*(t*6.0-15.0)+10.0); }\n\nfloat perlin_noise_4d(vec4 P) {\nvec4 Pi0 = floor(P); // Integer part for indexing\nvec4 Pi1 = Pi0 + 1.0; // Integer part + 1\nPi0 = mod(Pi0, 289.0);\nPi1 = mod(Pi1, 289.0);\nvec4 Pf0 = fract(P); // Fractional part for interpolation\nvec4 Pf1 = Pf0 - 1.0; // Fractional part - 1.0\nvec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\nvec4 iy = vec4(Pi0.yy, Pi1.yy);\nvec4 iz0 = vec4(Pi0.zzzz);\nvec4 iz1 = vec4(Pi1.zzzz);\nvec4 iw0 = vec4(Pi0.wwww);\nvec4 iw1 = vec4(Pi1.wwww);\n\nvec4 ixy = perlin_noise_4d_permute(perlin_noise_4d_permute(ix) + iy);\nvec4 ixy0 = perlin_noise_4d_permute(ixy + iz0);\nvec4 ixy1 = perlin_noise_4d_permute(ixy + iz1);\nvec4 ixy00 = perlin_noise_4d_permute(ixy0 + iw0);\nvec4 ixy01 = perlin_noise_4d_permute(ixy0 + iw1);\nvec4 ixy10 = perlin_noise_4d_permute(ixy1 + iw0);\nvec4 ixy11 = perlin_noise_4d_permute(ixy1 + iw1);\n\nvec4 gx00 = ixy00 / 7.0;\nvec4 gy00 = floor(gx00) / 7.0;\nvec4 gz00 = floor(gy00) / 6.0;\ngx00 = fract(gx00) - 0.5;\ngy00 = fract(gy00) - 0.5;\ngz00 = fract(gz00) - 0.5;\nvec4 gw00 = vec4(0.75) - abs(gx00) - abs(gy00) - abs(gz00);\nvec4 sw00 = step(gw00, vec4(0.0));\ngx00 -= sw00 * (step(0.0, gx00) - 0.5);\ngy00 -= sw00 * (step(0.0, gy00) - 0.5);\n\nvec4 gx01 = ixy01 / 7.0;\nvec4 gy01 = floor(gx01) / 7.0;\nvec4 gz01 = floor(gy01) / 6.0;\ngx01 = fract(gx01) - 0.5;\ngy01 = fract(gy01) - 0.5;\ngz01 = fract(gz01) - 0.5;\nvec4 gw01 = vec4(0.75) - abs(gx01) - abs(gy01) - abs(gz01);\nvec4 sw01 = step(gw01, vec4(0.0));\ngx01 -= sw01 * (step(0.0, gx01) - 0.5);\ngy01 -= sw01 * (step(0.0, gy01) - 0.5);\n\nvec4 gx10 = ixy10 / 7.0;\nvec4 gy10 = floor(gx10) / 7.0;\nvec4 gz10 = floor(gy10) / 6.0;\ngx10 = fract(gx10) - 0.5;\ngy10 = fract(gy10) - 0.5;\ngz10 = fract(gz10) - 0.5;\nvec4 gw10 = vec4(0.75) - abs(gx10) - abs(gy10) - abs(gz10);\nvec4 sw10 = step(gw10, vec4(0.0));\ngx10 -= sw10 * (step(0.0, gx10) - 0.5);\ngy10 -= sw10 * (step(0.0, gy10) - 0.5);\n\nvec4 gx11 = ixy11 / 7.0;\nvec4 gy11 = floor(gx11) / 7.0;\nvec4 gz11 = floor(gy11) / 6.0;\ngx11 = fract(gx11) - 0.5;\ngy11 = fract(gy11) - 0.5;\ngz11 = fract(gz11) - 0.5;\nvec4 gw11 = vec4(0.75) - abs(gx11) - abs(gy11) - abs(gz11);\nvec4 sw11 = step(gw11, vec4(0.0));\ngx11 -= sw11 * (step(0.0, gx11) - 0.5);\ngy11 -= sw11 * (step(0.0, gy11) - 0.5);\n\nvec4 g0000 = vec4(gx00.x,gy00.x,gz00.x,gw00.x);\nvec4 g1000 = vec4(gx00.y,gy00.y,gz00.y,gw00.y);\nvec4 g0100 = vec4(gx00.z,gy00.z,gz00.z,gw00.z);\nvec4 g1100 = vec4(gx00.w,gy00.w,gz00.w,gw00.w);\nvec4 g0010 = vec4(gx10.x,gy10.x,gz10.x,gw10.x);\nvec4 g1010 = vec4(gx10.y,gy10.y,gz10.y,gw10.y);\nvec4 g0110 = vec4(gx10.z,gy10.z,gz10.z,gw10.z);\nvec4 g1110 = vec4(gx10.w,gy10.w,gz10.w,gw10.w);\nvec4 g0001 = vec4(gx01.x,gy01.x,gz01.x,gw01.x);\nvec4 g1001 = vec4(gx01.y,gy01.y,gz01.y,gw01.y);\nvec4 g0101 = vec4(gx01.z,gy01.z,gz01.z,gw01.z);\nvec4 g1101 = vec4(gx01.w,gy01.w,gz01.w,gw01.w);\nvec4 g0011 = vec4(gx11.x,gy11.x,gz11.x,gw11.x);\nvec4 g1011 = vec4(gx11.y,gy11.y,gz11.y,gw11.y);\nvec4 g0111 = vec4(gx11.z,gy11.z,gz11.z,gw11.z);\nvec4 g1111 = vec4(gx11.w,gy11.w,gz11.w,gw11.w);\n\nvec4 norm00 = perlin_noise_4d_taylorInvSqrt(vec4(dot(g0000, g0000), dot(g0100, g0100), dot(g1000, g1000), dot(g1100, g1100)));\ng0000 *= norm00.x;\ng0100 *= norm00.y;\ng1000 *= norm00.z;\ng1100 *= norm00.w;\n\nvec4 norm01 = perlin_noise_4d_taylorInvSqrt(vec4(dot(g0001, g0001), dot(g0101, g0101), dot(g1001, g1001), dot(g1101, g1101)));\ng0001 *= norm01.x;\ng0101 *= norm01.y;\ng1001 *= norm01.z;\ng1101 *= norm01.w;\n\nvec4 norm10 = perlin_noise_4d_taylorInvSqrt(vec4(dot(g0010, g0010), dot(g0110, g0110), dot(g1010, g1010), dot(g1110, g1110)));\ng0010 *= norm10.x;\ng0110 *= norm10.y;\ng1010 *= norm10.z;\ng1110 *= norm10.w;\n\nvec4 norm11 = perlin_noise_4d_taylorInvSqrt(vec4(dot(g0011, g0011), dot(g0111, g0111), dot(g1011, g1011), dot(g1111, g1111)));\ng0011 *= norm11.x;\ng0111 *= norm11.y;\ng1011 *= norm11.z;\ng1111 *= norm11.w;\n\nfloat n0000 = dot(g0000, Pf0);\nfloat n1000 = dot(g1000, vec4(Pf1.x, Pf0.yzw));\nfloat n0100 = dot(g0100, vec4(Pf0.x, Pf1.y, Pf0.zw));\nfloat n1100 = dot(g1100, vec4(Pf1.xy, Pf0.zw));\nfloat n0010 = dot(g0010, vec4(Pf0.xy, Pf1.z, Pf0.w));\nfloat n1010 = dot(g1010, vec4(Pf1.x, Pf0.y, Pf1.z, Pf0.w));\nfloat n0110 = dot(g0110, vec4(Pf0.x, Pf1.yz, Pf0.w));\nfloat n1110 = dot(g1110, vec4(Pf1.xyz, Pf0.w));\nfloat n0001 = dot(g0001, vec4(Pf0.xyz, Pf1.w));\nfloat n1001 = dot(g1001, vec4(Pf1.x, Pf0.yz, Pf1.w));\nfloat n0101 = dot(g0101, vec4(Pf0.x, Pf1.y, Pf0.z, Pf1.w));\nfloat n1101 = dot(g1101, vec4(Pf1.xy, Pf0.z, Pf1.w));\nfloat n0011 = dot(g0011, vec4(Pf0.xy, Pf1.zw));\nfloat n1011 = dot(g1011, vec4(Pf1.x, Pf0.y, Pf1.zw));\nfloat n0111 = dot(g0111, vec4(Pf0.x, Pf1.yzw));\nfloat n1111 = dot(g1111, Pf1);\n\nvec4 fade_xyzw = perlin_noise_4d_fade(Pf0);\nvec4 n_0w = mix(vec4(n0000, n1000, n0100, n1100), vec4(n0001, n1001, n0101, n1101), fade_xyzw.w);\nvec4 n_1w = mix(vec4(n0010, n1010, n0110, n1110), vec4(n0011, n1011, n0111, n1111), fade_xyzw.w);\nvec4 n_zw = mix(n_0w, n_1w, fade_xyzw.z);\nvec2 n_yzw = mix(n_zw.xy, n_zw.zw, fade_xyzw.y);\nfloat n_xyzw = mix(n_yzw.x, n_yzw.y, fade_xyzw.x);\nreturn (2.2 * n_xyzw) / 2. + .5;\n}\n\nfloat fractal_perlin_noise_4d(vec4 p, int iterations) {\nfloat total = 0.;\nfloat divide = 0.;\n\nfloat scale = 1.;\n\nfor (int iter = 0; iter < 10; iter++) {\n    if (iter >= iterations) {\n        break;\n    }\n    \n    total += perlin_noise_4d(p / scale) * scale;\n    divide += scale;\n    \n    scale *= .5;\n}\n\nreturn total / divide;\n}\n\nvec4 curl_perlin_noise_4d(vec4 p) {\nconst float DX = 0.1;\n\nfloat v = perlin_noise_4d(p) * 2. - 1.;\nfloat x = perlin_noise_4d(p + vec4(DX, 0., 0., 0.)) * 2. - 1.;\nfloat y = perlin_noise_4d(p + vec4(0., DX, 0., 0.)) * 2. - 1.;\nfloat z = perlin_noise_4d(p + vec4(0., 0., DX, 0.)) * 2. - 1.;\nfloat w = perlin_noise_4d(p + vec4(0., 0., 0., DX)) * 2. - 1.;\nreturn normalize(vec4(v - x, v - y, v - x, v - w));\n}\n\nvec4 curl_fractal_perlin_noise_4d(vec4 p, int iterations) {\nconst float DX = 0.1;\n\nfloat v = fractal_perlin_noise_4d(p, iterations) * 2. - 1.;\nfloat x = fractal_perlin_noise_4d(p + vec4(DX, 0., 0., 0.), iterations) * 2. - 1.;\nfloat y = fractal_perlin_noise_4d(p + vec4(0., DX, 0., 0.), iterations) * 2. - 1.;\nfloat z = fractal_perlin_noise_4d(p + vec4(0., 0., DX, 0.), iterations) * 2. - 1.;\nfloat w = fractal_perlin_noise_4d(p + vec4(0., 0., 0., DX), iterations) * 2. - 1.;\nreturn normalize(vec4(v - x, v - y, v - x, v - w));\n}",perlin_noise:["perlin_noise_2d","perlin_noise_3d","perlin_noise_4d"],simplex_noise_2d:"\nvec3 simplex_noise_2d_permute(vec3 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\n\nfloat simplex_noise_2d(vec2 v) {\nconst vec4 C = vec4(0.211324865405187, 0.366025403784439,\n       -0.577350269189626, 0.024390243902439);\nvec2 i  = floor(v + dot(v, C.yy) );\nvec2 x0 = v -   i + dot(i, C.xx);\nvec2 i1;\ni1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\nvec4 x12 = x0.xyxy + C.xxzz;\nx12.xy -= i1;\ni = mod(i, 289.0);\nvec3 p = simplex_noise_2d_permute( simplex_noise_2d_permute( i.y + vec3(0.0, i1.y, 1.0 ))\n+ i.x + vec3(0.0, i1.x, 1.0 ));\nvec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy),\ndot(x12.zw,x12.zw)), 0.0);\nm = m*m ;\nm = m*m ;\nvec3 x = 2.0 * fract(p * C.www) - 1.0;\nvec3 h = abs(x) - 0.5;\nvec3 ox = floor(x + 0.5);\nvec3 a0 = x - ox;\nm *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\nvec3 g;\ng.x  = a0.x  * x0.x  + h.x  * x0.y;\ng.yz = a0.yz * x12.xz + h.yz * x12.yw;\nreturn (130.0 * dot(m, g)) / 2. + .5;\n}\n\nfloat fractal_simplex_noise_2d(vec2 p, int iterations) {\nfloat total = 0.;\nfloat divide = 0.;\n\nfloat scale = 1.;\n\nfor (int iter = 0; iter < 10; iter++) {\n    if (iter >= iterations) {\n        break;\n    }\n    \n    total += simplex_noise_2d(p / scale) * scale;\n    divide += scale;\n    \n    scale *= .5;\n}\n\nreturn total / divide;\n}\n\nvec2 curl_simplex_noise_2d(vec2 p) {\nconst float DX = 0.1;\n\nfloat v = simplex_noise_2d(p) * 2. - 1.;\nfloat x = simplex_noise_2d(p + vec2(DX, 0.)) * 2. - 1.;\nfloat y = simplex_noise_2d(p + vec2(0., DX)) * 2. - 1.;\nreturn normalize(vec2(v - x, v - y));\n}\n\nvec2 curl_fractal_simplex_noise_2d(vec2 p, int iterations) {\nconst float DX = 0.1;\n\nfloat v = fractal_simplex_noise_2d(p, iterations) * 2. - 1.;\nfloat x = fractal_simplex_noise_2d(p + vec2(DX, 0.), iterations) * 2. - 1.;\nfloat y = fractal_simplex_noise_2d(p + vec2(0., DX), iterations) * 2. - 1.;\nreturn normalize(vec2(v - x, v - y));\n}",simplex_noise_3d:"\nvec4 simplex_noise_3d_permute(vec4 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\nvec4 simplex_noise_3d_taylorInvSqrt(vec4 r) { return 1.79284291400159 - 0.85373472095314 * r; }\n\nfloat simplex_noise_3d(vec3 v) { \nconst vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\nconst vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n// First corner\nvec3 i  = floor(v + dot(v, C.yyy) );\nvec3 x0 =   v - i + dot(i, C.xxx) ;\n\n// Other corners\nvec3 g = step(x0.yzx, x0.xyz);\nvec3 l = 1.0 - g;\nvec3 i1 = min( g.xyz, l.zxy );\nvec3 i2 = max( g.xyz, l.zxy );\n\n//  x0 = x0 - 0. + 0.0 * C \nvec3 x1 = x0 - i1 + 1.0 * C.xxx;\nvec3 x2 = x0 - i2 + 2.0 * C.xxx;\nvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n// Permutations\ni = mod(i, 289.0 ); \nvec4 p = simplex_noise_3d_permute( simplex_noise_3d_permute( simplex_noise_3d_permute( \n         i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n       + i.y + vec4(0.0, i1.y, i2.y, 1.0 )) \n       + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n// Gradients\n// ( N*N points uniformly over a square, mapped onto an octahedron.)\nfloat n_ = 1.0/7.0; // N=7\nvec3  ns = n_ * D.wyz - D.xzx;\n\nvec4 j = p - 49.0 * floor(p * ns.z *ns.z);  //  mod(p,N*N)\n\nvec4 x_ = floor(j * ns.z);\nvec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\nvec4 x = x_ *ns.x + ns.yyyy;\nvec4 y = y_ *ns.x + ns.yyyy;\nvec4 h = 1.0 - abs(x) - abs(y);\n\nvec4 b0 = vec4( x.xy, y.xy );\nvec4 b1 = vec4( x.zw, y.zw );\n\nvec4 s0 = floor(b0)*2.0 + 1.0;\nvec4 s1 = floor(b1)*2.0 + 1.0;\nvec4 sh = -step(h, vec4(0.0));\n\nvec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\nvec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\nvec3 p0 = vec3(a0.xy,h.x);\nvec3 p1 = vec3(a0.zw,h.y);\nvec3 p2 = vec3(a1.xy,h.z);\nvec3 p3 = vec3(a1.zw,h.w);\n\n//Normalise gradients\nvec4 norm = simplex_noise_3d_taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\np0 *= norm.x;\np1 *= norm.y;\np2 *= norm.z;\np3 *= norm.w;\n\n// Mix final noise value\nvec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\nm = m * m;\nreturn 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), \n                            dot(p2,x2), dot(p3,x3) ) );\n}\n\nfloat fractal_simplex_noise_3d(vec3 p, int iterations) {\nfloat total = 0.;\nfloat divide = 0.;\n\nfloat scale = 1.;\n\nfor (int iter = 0; iter < 10; iter++) {\n    if (iter >= iterations) {\n        break;\n    }\n    \n    total += simplex_noise_3d(p / scale) * scale;\n    divide += scale;\n    \n    scale *= .5;\n}\n\nreturn total / divide;\n}\n\nvec3 curl_simplex_noise_3d(vec3 p) {\nconst float DX = 0.1;\n\nfloat v = simplex_noise_3d(p) * 2. - 1.;\nfloat x = simplex_noise_3d(p + vec3(DX, 0., 0.)) * 2. - 1.;\nfloat y = simplex_noise_3d(p + vec3(0., DX, 0.)) * 2. - 1.;\nfloat z = simplex_noise_3d(p + vec3(0., 0., DX)) * 2. - 1.;\nreturn normalize(vec3(v - x, v - y, v - x));\n}\n\nvec3 curl_fractal_simplex_noise_3d(vec3 p, int iterations) {\nconst float DX = 0.1;\n\nfloat v = fractal_simplex_noise_3d(p, iterations) * 2. - 1.;\nfloat x = fractal_simplex_noise_3d(p + vec3(DX, 0., 0.), iterations) * 2. - 1.;\nfloat y = fractal_simplex_noise_3d(p + vec3(0., DX, 0.), iterations) * 2. - 1.;\nfloat z = fractal_simplex_noise_3d(p + vec3(0., 0., DX), iterations) * 2. - 1.;\nreturn normalize(vec3(v - x, v - y, v - z));\n}",simplex_noise_4d:"\nvec4 simplex_noise_4d_permute(vec4 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\nfloat simplex_noise_4d_permute(float x) { return floor(mod(((x*34.0)+1.0)*x, 289.0)); }\nvec4 simplex_noise_4d_taylorInvSqrt(vec4 r) { return 1.79284291400159 - 0.85373472095314 * r; }\nfloat simplex_noise_4d_taylorInvSqrt(float r) { return 1.79284291400159 - 0.85373472095314 * r; }\n\nvec4 simplex_noise_4d_grad(float j, vec4 ip) {\nconst vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\nvec4 p,s;\n\np.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\np.w = 1.5 - dot(abs(p.xyz), ones.xyz);\ns = vec4(lessThan(p, vec4(0.0)));\np.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www; \n\nreturn p;\n}\n\nfloat simplex_noise_4d(vec4 v) {\nconst vec2  C = vec2( 0.138196601125010504,  // (5 - sqrt(5))/20  G4\n                    0.309016994374947451); // (sqrt(5) - 1)/4   F4\n// First corner\nvec4 i  = floor(v + dot(v, C.yyyy) );\nvec4 x0 = v -   i + dot(i, C.xxxx);\n\n// Other corners\n\n// Rank sorting originally contributed by Bill Licea-Kane, AMD (formerly ATI)\nvec4 i0;\n\nvec3 isX = step( x0.yzw, x0.xxx );\nvec3 isYZ = step( x0.zww, x0.yyz );\n//  i0.x = dot( isX, vec3( 1.0 ) );\ni0.x = isX.x + isX.y + isX.z;\ni0.yzw = 1.0 - isX;\n\n//  i0.y += dot( isYZ.xy, vec2( 1.0 ) );\ni0.y += isYZ.x + isYZ.y;\ni0.zw += 1.0 - isYZ.xy;\n\ni0.z += isYZ.z;\ni0.w += 1.0 - isYZ.z;\n\n// i0 now contains the unique values 0,1,2,3 in each channel\nvec4 i3 = clamp( i0, 0.0, 1.0 );\nvec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\nvec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\n\n//  x0 = x0 - 0.0 + 0.0 * C \nvec4 x1 = x0 - i1 + 1.0 * C.xxxx;\nvec4 x2 = x0 - i2 + 2.0 * C.xxxx;\nvec4 x3 = x0 - i3 + 3.0 * C.xxxx;\nvec4 x4 = x0 - 1.0 + 4.0 * C.xxxx;\n\n// Permutations\ni = mod(i, 289.0); \nfloat j0 = simplex_noise_4d_permute( simplex_noise_4d_permute( simplex_noise_4d_permute( simplex_noise_4d_permute(i.w) + i.z) + i.y) + i.x);\nvec4 j1 = simplex_noise_4d_permute( simplex_noise_4d_permute( simplex_noise_4d_permute( simplex_noise_4d_permute (\n         i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\n       + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\n       + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\n       + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\n// Gradients\n// ( 7*7*6 points uniformly over a cube, mapped onto a 4-octahedron.)\n// 7*7*6 = 294, which is close to the ring size 17*17 = 289.\n\nvec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;\n\nvec4 p0 = simplex_noise_4d_grad(j0,   ip);\nvec4 p1 = simplex_noise_4d_grad(j1.x, ip);\nvec4 p2 = simplex_noise_4d_grad(j1.y, ip);\nvec4 p3 = simplex_noise_4d_grad(j1.z, ip);\nvec4 p4 = simplex_noise_4d_grad(j1.w, ip);\n\n// Normalise gradients\nvec4 norm = simplex_noise_4d_taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\np0 *= norm.x;\np1 *= norm.y;\np2 *= norm.z;\np3 *= norm.w;\np4 *= simplex_noise_4d_taylorInvSqrt(dot(p4,p4));\n\n// Mix contributions from the five corners\nvec3 m0 = max(0.6 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);\nvec2 m1 = max(0.6 - vec2(dot(x3,x3), dot(x4,x4)            ), 0.0);\nm0 = m0 * m0;\nm1 = m1 * m1;\nreturn (49.0 * ( dot(m0*m0, vec3( dot( p0, x0 ), dot( p1, x1 ), dot( p2, x2 )))\n           + dot(m1*m1, vec2( dot( p3, x3 ), dot( p4, x4 ) ) ) )) / 2. + .5;\n\n}\n\nfloat fractal_simplex_noise_4d(vec4 p, int iterations) {\nfloat total = 0.;\nfloat divide = 0.;\n\nfloat scale = 1.;\n\nfor (int iter = 0; iter < 10; iter++) {\n    if (iter >= iterations) {\n        break;\n    }\n    \n    total += simplex_noise_4d(p / scale) * scale;\n    divide += scale;\n    \n    scale *= .5;\n}\n\nreturn total / divide;\n}\n\nvec4 curl_simplex_noise_4d(vec4 p) {\nconst float DX = 0.1;\n\nfloat v = simplex_noise_4d(p) * 2. - 1.;\nfloat x = simplex_noise_4d(p + vec4(DX, 0., 0., 0.)) * 2. - 1.;\nfloat y = simplex_noise_4d(p + vec4(0., DX, 0., 0.)) * 2. - 1.;\nfloat z = simplex_noise_4d(p + vec4(0., 0., DX, 0.)) * 2. - 1.;\nfloat w = simplex_noise_4d(p + vec4(0., 0., 0., DX)) * 2. - 1.;\nreturn normalize(vec4(v - x, v - y, v - x, v - w));\n}\n\nvec4 curl_fractal_simplex_noise_4d(vec4 p, int iterations) {\nconst float DX = 0.1;\n\nfloat v = fractal_simplex_noise_4d(p, iterations) * 2. - 1.;\nfloat x = fractal_simplex_noise_4d(p + vec4(DX, 0., 0., 0.), iterations) * 2. - 1.;\nfloat y = fractal_simplex_noise_4d(p + vec4(0., DX, 0., 0.), iterations) * 2. - 1.;\nfloat z = fractal_simplex_noise_4d(p + vec4(0., 0., DX, 0.), iterations) * 2. - 1.;\nfloat w = fractal_simplex_noise_4d(p + vec4(0., 0., 0., DX), iterations) * 2. - 1.;\nreturn normalize(vec4(v - x, v - y, v - x, v - w));\n}",simplex_noise:["simplex_noise_2d","simplex_noise_3d","simplex_noise_4d"],noise:["perlin_noise","simplex_noise"],color:"\nvec3 RGBtoHSV(vec3 rgb) {\n float Cmax = max(rgb.r, max(rgb.g, rgb.b));\n float Cmin = min(rgb.r, min(rgb.g, rgb.b));\n float delta = Cmax - Cmin;\n\n vec3 hsv = vec3(0., 0., Cmax);\n\n if (Cmax > Cmin) {\n     hsv.y = delta / Cmax;\n\n     if (rgb.r == Cmax)\n         hsv.x = (rgb.g - rgb.b) / delta;\n     else {\n         if (rgb.g == Cmax)\n             hsv.x = 2. + (rgb.b - rgb.r) / delta;\n         else\n             hsv.x = 4. + (rgb.r - rgb.g) / delta;\n     }\n     hsv.x = fract(hsv.x / 6.);\n }\n return hsv;\n}\n\nvec3 HSVtoRGB(vec3 c) {\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec3 RGBtoHSL(vec3 color) {\n vec3 hsl; // init to 0 to avoid warnings ? (and reverse if + remove first part)\n\n float fmin = min(min(color.r, color.g), color.b); //Min. value of RGB\n float fmax = max(max(color.r, color.g), color.b); //Max. value of RGB\n float delta = fmax - fmin; //Delta RGB value\n\n hsl.z = (fmax + fmin) / 2.0; // Luminance\n\n if (delta == 0.0) //This is a gray, no chroma...\n {\n     hsl.x = 0.0; // Hue\n     hsl.y = 0.0; // Saturation\n } else //Chromatic data...\n {\n     if (hsl.z < 0.5)\n         hsl.y = delta / (fmax + fmin); // Saturation\n     else\n         hsl.y = delta / (2.0 - fmax - fmin); // Saturation\n\n     float deltaR = (((fmax - color.r) / 6.0) + (delta / 2.0)) / delta;\n     float deltaG = (((fmax - color.g) / 6.0) + (delta / 2.0)) / delta;\n     float deltaB = (((fmax - color.b) / 6.0) + (delta / 2.0)) / delta;\n\n     if (color.r == fmax)\n         hsl.x = deltaB - deltaG; // Hue\n     else if (color.g == fmax)\n         hsl.x = (1.0 / 3.0) + deltaR - deltaB; // Hue\n     else if (color.b == fmax)\n         hsl.x = (2.0 / 3.0) + deltaG - deltaR; // Hue\n\n     if (hsl.x < 0.0)\n         hsl.x += 1.0; // Hue\n     else if (hsl.x > 1.0)\n         hsl.x -= 1.0; // Hue\n }\n\n return hsl;\n}\n\nvec3 HSLtoRGB(vec3 c) {\nvec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0);\n\nreturn c.z + c.y * (rgb-0.5)*(1.0-abs(2.0*c.z-1.0));\n}"};function f(e){return function(e){if(Array.isArray(e)){for(var n=0,t=new Array(e.length);n<e.length;n++)t[n]=e[n];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function v(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u={},p=function(){function e(n,t){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.name=n,this.code=t}var n,t,r;return n=e,r=[{key:"registerImport",value:function(n,t){u[n]=new e(n,t)}},{key:"getImport",value:function(e){return u[e]}},{key:"resolveImports",value:function(n){if(n.code instanceof Array){var t=[],r=!0,i=!1,o=void 0;try{for(var a,l=n.code[Symbol.iterator]();!(r=(a=l.next()).done);r=!0){var c=a.value;t.push.apply(t,f(e.resolveImports(e.getImport(c))))}}catch(e){i=!0,o=e}finally{try{r||null==l.return||l.return()}finally{if(i)throw o}}return t}return[n]}},{key:"resolveCode",value:function(n){n=(n=n.map((function(n){return e.resolveImports(n)}))).flat(1/0);var t=[],r=!0,i=!1,o=void 0;try{for(var a,l=n[Symbol.iterator]();!(r=(a=l.next()).done);r=!0){var c=a.value;-1==t.indexOf(c)&&t.push(c)}}catch(e){i=!0,o=e}finally{try{r||null==l.return||l.return()}finally{if(i)throw o}}return t.map((function(e){return e.code})).join("\n")}}],(t=null)&&v(n.prototype,t),r&&v(n,r),e}();for(var x in s)p.registerImport(x,s[x]);var y=p;function d(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var g=function(){function e(n,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=r.blending,o=void 0===i?"linear":i,a=r.wrapping,l=void 0===a?"clamp":a;!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.name=n,this.image=t,this.blending=o||"linear",this.wrapping=l||"clamp",this.uniforms=[new c("".concat(this.name,"_size"),"vec2",this.image.width,this.image.height)]}var n,t,r;return n=e,(t=[{key:"getUniformDeclaration",value:function(){return"uniform sampler2D ".concat(this.name,";")}},{key:"loadUniformLocation",value:function(e,n){this.location=e.getUniformLocation(n,this.name)}},{key:"bindTexture",value:function(e){this.unbindTexture(e),this.texture=e.createTexture();var n,t,r=e.RGBA,i=e.RGBA,o=e.UNSIGNED_BYTE;switch(e.bindTexture(e.TEXTURE_2D,this.texture),e.texImage2D(e.TEXTURE_2D,0,r,i,o,this.image),this.blending.toLowerCase()){case"linear":n=e.LINEAR;break;case"nearest":n=e.NEAREST}switch(this.wrapping.toLowerCase()){case"repeat":t=e.REPEAT;break;case"clamp":t=e.CLAMP_TO_EDGE;break;case"mirror":t=e.MIRRORED_REPEAT}e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,n),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,t),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,t)}},{key:"unbindTexture",value:function(e){this.texture&&e.deleteTexture(this.texture)}},{key:"loadUniformLocation",value:function(e,n){this.location=e.getUniformLocation(n,this.name)}}])&&d(n.prototype,t),r&&d(n,r),e}();function m(e,n,t){return(m=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()?Reflect.construct:function(e,n,t){var r=[null];r.push.apply(r,n);var i=new(Function.bind.apply(e,r));return t&&_(i,t.prototype),i}).apply(null,arguments)}function _(e,n){return(_=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function h(e){return function(e){if(Array.isArray(e)){for(var n=0,t=new Array(e.length);n<e.length;n++)t[n]=e[n];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function w(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var z=["TEXTURE0","TEXTURE1","TEXTURE2","TEXTURE3","TEXTURE4","TEXTURE5","TEXTURE6","TEXTURE7"],b=function(){function e(n){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.element=n,this.gl=n.canvasElt.getContext("webgl"),this.uniforms=[],this.textures=[],this.imports=[],this.program=null,this.shouldCompileProgram=!0,this.positionBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.positionBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,-1,-1,1,1,-1,1,1]),this.gl.STATIC_DRAW),this.addUniform("viewportSize","vec2",0,0),this.frameCount=0,this.addUniform("frameCount","int",0),this.startTime=new Date,this.addUniform("timeElapsed","float",0),this.addUniform("mousePosition","vec2",0,0),this.addUniform("mouseState","int",0)}var n,t,r;return n=e,(t=[{key:"getExtraFragmentCode",value:function(){var e="precision highp float;",n=!0,t=!1,r=void 0;try{for(var i,o=this.getUniforms()[Symbol.iterator]();!(n=(i=o.next()).done);n=!0){var a=i.value;e+="\n".concat(a.getUniformDeclaration())}}catch(e){t=!0,r=e}finally{try{n||null==o.return||o.return()}finally{if(t)throw r}}var l=!0,c=!1,s=void 0;try{for(var f,v=this.textures[Symbol.iterator]();!(l=(f=v.next()).done);l=!0){var u=f.value;e+="\n".concat(u.getUniformDeclaration())}}catch(e){c=!0,s=e}finally{try{l||null==v.return||v.return()}finally{if(c)throw s}}return e+=y.resolveCode(this.imports.map((function(e){return y.getImport(e)})))}},{key:"compileProgram",value:function(){this.shouldCompileProgram=!1;var e="void main() {\n\tgl_FragColor = vec4(gl_FragCoord.xy / viewportSize, 0., 1.);\n}";if(null!=this.element.fragmentShaderElt&&(e=this.element.fragmentShaderElt.textContent),e=this.getExtraFragmentCode()+"\n"+e,this.program=i.initShaderProgram(this.gl,"attribute vec2 position;\n\nvoid main() {\n\tgl_Position = vec4(position, 0., 0.);\n}",e),null!=this.program){var n=!0,t=!1,r=void 0;try{for(var o,a=this.getUniforms()[Symbol.iterator]();!(n=(o=a.next()).done);n=!0)o.value.loadUniformLocation(this.gl,this.program)}catch(e){t=!0,r=e}finally{try{n||null==a.return||a.return()}finally{if(t)throw r}}var l=!0,c=!1,s=void 0;try{for(var f,v=this.textures[Symbol.iterator]();!(l=(f=v.next()).done);l=!0)f.value.loadUniformLocation(this.gl,this.program)}catch(e){c=!0,s=e}finally{try{l||null==v.return||v.return()}finally{if(c)throw s}}}}},{key:"canRender",value:function(){return null!=this.program}},{key:"render",value:function(){if(this.shouldCompileProgram&&this.compileProgram(),this.canRender()){this.frameCount++,this.setUniform("frameCount",this.frameCount),this.setUniform("timeElapsed",(new Date-this.startTime)/1e3);var e=!0,n=!1,t=void 0;try{for(var r,i=this.getUniforms()[Symbol.iterator]();!(e=(r=i.next()).done);e=!0)r.value.setUniformValue(this.gl)}catch(e){n=!0,t=e}finally{try{e||null==i.return||i.return()}finally{if(n)throw t}}this.bindTextures(),this.gl.clearColor(0,0,0,1),this.gl.clear(this.gl.COLOR_BUFFER_BIT);var o=this.gl.FLOAT,a=this.gl.getAttribLocation(this.program,"position");this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.positionBuffer),this.gl.vertexAttribPointer(a,2,o,!1,0,0),this.gl.enableVertexAttribArray(a),this.gl.useProgram(this.program),this.gl.drawArrays(this.gl.TRIANGLES,0,6)}}},{key:"bindTextures",value:function(){var e=0,n=!0,t=!1,r=void 0;try{for(var i,o=this.textures[Symbol.iterator]();!(n=(i=o.next()).done);n=!0){var a=i.value;if(e>z.length)break;var l=this.gl[z[e]];this.gl.activeTexture(l),this.gl.bindTexture(this.gl.TEXTURE_2D,a.texture),this.gl.uniform1i(a.location,e),e++}}catch(e){t=!0,r=e}finally{try{n||null==o.return||o.return()}finally{if(t)throw r}}}},{key:"getUniforms",value:function(){var e=this.uniforms,n=!0,t=!1,r=void 0;try{for(var i,o=this.textures[Symbol.iterator]();!(n=(i=o.next()).done);n=!0){var a=i.value;e=[].concat(h(e),h(a.uniforms))}}catch(e){t=!0,r=e}finally{try{n||null==o.return||o.return()}finally{if(t)throw r}}return e}},{key:"addUniform",value:function(e,n){for(var t=arguments.length,r=new Array(t>2?t-2:0),i=2;i<t;i++)r[i-2]=arguments[i];this.uniforms.push(m(c,[e,n].concat(r))),this.shouldCompileProgram=!0}},{key:"getUniform",value:function(e){var n=!0,t=!1,r=void 0;try{for(var i,o=this.getUniforms()[Symbol.iterator]();!(n=(i=o.next()).done);n=!0){var a=i.value;if(a.name==e)return a}}catch(e){t=!0,r=e}finally{try{n||null==o.return||o.return()}finally{if(t)throw r}}return null}},{key:"setUniform",value:function(e){var n=this.getUniform(e);if(null!=n){for(var t=arguments.length,r=new Array(t>1?t-1:0),i=1;i<t;i++)r[i-1]=arguments[i];n.setValue.apply(n,r)}}},{key:"addTexture",value:function(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];var r=m(g,n);r.bindTexture(this.gl),this.textures.push(r)}},{key:"getTexture",value:function(e){var n=!0,t=!1,r=void 0;try{for(var i,o=this.textures[Symbol.iterator]();!(n=(i=o.next()).done);n=!0){var a=i.value;if(a.name==e)return a}}catch(e){t=!0,r=e}finally{try{n||null==o.return||o.return()}finally{if(t)throw r}}return null}},{key:"deleteTexture",value:function(e){var n=this.getTexture(e);null!=n&&(n.unbindTexture(this.gl),this.textures.splice(this.textures.indexOf(n),1))}}])&&w(n.prototype,t),r&&w(n,r),e}();function P(e){return(P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function S(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function E(e,n){return!n||"object"!==P(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function T(e){var n="function"==typeof Map?new Map:void 0;return(T=function(e){if(null===e||(t=e,-1===Function.toString.call(t).indexOf("[native code]")))return e;var t;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==n){if(n.has(e))return n.get(e);n.set(e,r)}function r(){return k(e,arguments,D(this).constructor)}return r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),C(r,e)})(e)}function k(e,n,t){return(k=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()?Reflect.construct:function(e,n,t){var r=[null];r.push.apply(r,n);var i=new(Function.bind.apply(e,r));return t&&C(i,t.prototype),i}).apply(null,arguments)}function C(e,n){return(C=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function D(e){return(D=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var R=":host {\n\tposition: relative;\n\tdisplay: inline-block;\n\twidth: 250px;\n\theight: 250px;\n}\n\n:host > canvas {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n}",X=function(e){function n(){var e;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(e=E(this,D(n).call(this))).shadow=e.attachShadow({mode:"open"}),e.styleElt=document.createElement("style"),e.styleElt.textContent=R,e.canvasElt=document.createElement("canvas"),e.shadow.appendChild(e.styleElt),e.shadow.appendChild(e.canvasElt),e.mounted=!1,e.loadingTextures=[],e.fragmentShaderElt=null,e}var t,r,i;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&C(e,n)}(n,e),t=n,(r=[{key:"getMousePosition",value:function(e){return[e.x-this.rect.x,this.height-e.y+this.rect.y]}},{key:"connectedCallback",value:function(){var e=this;this.mounted=!0,this.shaderSketch=new b(this),this.onmousedown=function(n){e.setUniform("mousePosition",e.getMousePosition(n)),e.setUniform("mouseState",1)},this.onmousemove=function(n){e.setUniform("mousePosition",e.getMousePosition(n))},this.onmouseup=function(n){e.setUniform("mousePosition",e.getMousePosition(n)),e.setUniform("mouseState",0)},this.render()}},{key:"disconnectedCallback",value:function(){this.mounted=!1,this.shaderSketch=null,this.onmousedown=null,this.onmousemove=null,this.onmouseup=null}},{key:"updateChild",value:function(e){var n=this,t=e.child,r=e.add;switch(t.tagName.toLowerCase()){case"fragment-shader":this.fragmentShaderElt=r?t:null;break;case"shader-uniform":if(!r)break;var i=t.getAttribute("name"),o=t.getAttribute("type"),a=t.getAttribute("value");null==this.getUniform(i)?this.addUniform(i,o,a):this.setUniform(i,a);break;case"shader-import":var l=t.getAttribute("name");r?this.shaderSketch.imports.push(l):this.shaderSketch.imports.splice(this.shaderSketch.imports.indexOf(l),-1);break;case"shader-texture":var c=t.getAttribute("name"),s=t.getAttribute("src"),f=t.getAttribute("blending"),v=t.getAttribute("wrapping");if(r){if(null==this.shaderSketch.getTexture(c)&&-1==this.loadingTextures.indexOf(c)){this.loadingTextures.push(c);var u=new Image;u.onload=function(){n.shaderSketch.addTexture(c,u,{blending:f,wrapping:v}),n.shaderSketch.shouldCompileProgram=!0,n.loadingTextures.splice(n.loadingTextures.indexOf(c),1)},u.src=s}}else this.shaderSketch.deleteTexture(c)}this.shaderSketch.shouldCompileProgram=!0}},{key:"render",value:function(){var e=this;this.mounted&&requestAnimationFrame((function(){e.render()})),this.updateSize(),this.shaderSketch.render()}},{key:"updateSize",value:function(){this.rect=this.getBoundingClientRect();var e=this.rect,n=e.width,t=e.height,r=this.width,i=this.height;n==r&&t==i||(this.width=n,this.height=t,this.canvasElt.width=n,this.canvasElt.style.width=n>=1?n:1,this.canvasElt.height=t,this.canvasElt.style.height=t>=1?t:1,this.shaderSketch.gl.viewport(0,0,n,t),this.setUniform("viewportSize",n,t))}},{key:"addUniform",value:function(){var e;(e=this.shaderSketch).addUniform.apply(e,arguments)}},{key:"getUniform",value:function(){var e;return(e=this.shaderSketch).getUniform.apply(e,arguments)}},{key:"setUniform",value:function(){var e;(e=this.shaderSketch).setUniform.apply(e,arguments)}}])&&S(t.prototype,r),i&&S(t,i),n}(T(HTMLElement));function U(e){return(U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function O(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function A(e,n){return!n||"object"!==U(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function j(e){var n="function"==typeof Map?new Map:void 0;return(j=function(e){if(null===e||(t=e,-1===Function.toString.call(t).indexOf("[native code]")))return e;var t;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==n){if(n.has(e))return n.get(e);n.set(e,r)}function r(){return I(e,arguments,F(this).constructor)}return r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),L(r,e)})(e)}function I(e,n,t){return(I=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()?Reflect.construct:function(e,n,t){var r=[null];r.push.apply(r,n);var i=new(Function.bind.apply(e,r));return t&&L(i,t.prototype),i}).apply(null,arguments)}function L(e,n){return(L=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function F(e){return(F=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var B=function(e){function n(){return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),A(this,F(n).apply(this,arguments))}var t,r,i;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&L(e,n)}(n,e),t=n,(r=[{key:"connectedCallback",value:function(){this.parentNode instanceof X&&(this.parent=this.parentNode,this.parent.updateChild({child:this,add:!0}))}},{key:"disconnectedCallback",value:function(){this.parent instanceof X&&(this.parent.updateChild({child:this,add:!1}),this.parent=null)}}])&&O(t.prototype,r),i&&O(t,i),n}(j(HTMLElement));function M(e){return(M="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function q(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function G(e,n){return!n||"object"!==M(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function N(e){return(N=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function H(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&V(e,n)}function V(e,n){return(V=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}customElements.define("shader-sketch",X),customElements.define("fragment-shader",function(e){function n(){return q(this,n),G(this,N(n).apply(this,arguments))}return H(n,e),n}(B)),customElements.define("shader-uniform",function(e){function n(){return q(this,n),G(this,N(n).apply(this,arguments))}return H(n,e),n}(B)),customElements.define("shader-import",function(e){function n(){return q(this,n),G(this,N(n).apply(this,arguments))}return H(n,e),n}(B)),customElements.define("shader-texture",function(e){function n(){return q(this,n),G(this,N(n).apply(this,arguments))}return H(n,e),n}(B))}]);