!function(r){var n={};function e(t){if(n[t])return n[t].exports;var i=n[t]={i:t,l:!1,exports:{}};return r[t].call(i.exports,i,i.exports,e),i.l=!0,i.exports}e.m=r,e.c=n,e.d=function(r,n,t){e.o(r,n)||Object.defineProperty(r,n,{enumerable:!0,get:t})},e.r=function(r){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(r,"__esModule",{value:!0})},e.t=function(r,n){if(1&n&&(r=e(r)),8&n)return r;if(4&n&&"object"==typeof r&&r&&r.__esModule)return r;var t=Object.create(null);if(e.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:r}),2&n&&"string"!=typeof r)for(var i in r)e.d(t,i,function(n){return r[n]}.bind(null,i));return t},e.n=function(r){var n=r&&r.__esModule?function(){return r.default}:function(){return r};return e.d(n,"a",n),n},e.o=function(r,n){return Object.prototype.hasOwnProperty.call(r,n)},e.p="",e(e.s=17)}([function(r,n,e){"use strict";e.r(n),n.default="const float PI = 3.1415926535897932384626433832795;"},function(r,n,e){"use strict";e.r(n),n.default="struct RayMarch {\r\n    int iterations;\r\n    int maxIterations;\r\n    vec3 position;\r\n    vec3 direction;\r\n    float epsilon;\r\n    bool finished;\r\n    bool hit;\r\n    float smallestDistance;\r\n    vec3 closestPosition;\r\n    float emission;\r\n};\r\n\r\nRayMarch create_raymarch(vec3 position, vec3 direction, int maxIterations) {\r\n    return RayMarch(0, maxIterations, position, direction, 0.0001, false, false, 999999999., vec3(0., 0., 0.), 0.);\r\n}\r\n\r\nRayMarch iterate_raymarch(RayMarch rayMarch, float sdf) {\r\n    rayMarch.iterations++;\r\n\r\n    if (sdf < rayMarch.epsilon) {\r\n        rayMarch.finished = true;\r\n        rayMarch.hit = true;\r\n        return rayMarch;\r\n    }\r\n\r\n    if (rayMarch.iterations > rayMarch.maxIterations) {\r\n        rayMarch.finished = true;\r\n        return rayMarch;\r\n    }\r\n\r\n    rayMarch.position += normalize(rayMarch.direction) * sdf;\r\n    float emission = 1. / (sdf + 1.);\r\n\r\n    if (rayMarch.emission < emission) {\r\n        rayMarch.emission = emission;\r\n    }\r\n\r\n    if (sdf < rayMarch.smallestDistance) {\r\n        rayMarch.smallestDistance = sdf;\r\n        rayMarch.closestPosition = rayMarch.position;\r\n    }\r\n    \r\n    return rayMarch;\r\n}\r\n\r\nvec3 raymarch_normal(float center, float x, float y, float z) {\r\n    return normalize(vec3(center - x, center - y, center - z));\r\n}\r\n\r\nfloat raymarch_ambient_occlusion(RayMarch rayMarch, float intensity) {\r\n    return pow(1. - intensity, float(rayMarch.iterations));\r\n}\r\n\r\nfloat raymarch_emission(RayMarch rayMarch, float limit, float intensity) {\r\n    return limit * intensity * (2. / (1. + exp(-rayMarch.emission / limit)) - 1.);\r\n}"},function(r,n,e){"use strict";e.r(n),n.default="vec3 camera_look(float yaw, float pitch, float fov, float aspectRatio, vec2 screenPos) {\r\n    screenPos = screenPos * 2. - 1.;\r\n    pitch = pitch * PI / 180.;\r\n    yaw = yaw * PI / 180.;\r\n\r\n    vec3 forward = vec3(cos(yaw) * cos(pitch), sin(pitch), sin(yaw) * cos(pitch));\r\n    vec3 up = vec3(cos(yaw) * cos(pitch + PI / 2.), sin(pitch + PI / 2.), sin(yaw) * cos(pitch + PI / 2.));\r\n    vec3 right = cross(forward, up);\r\n\r\n    screenPos.y /= aspectRatio;\r\n    float fovScale = tan(fov * PI / 180.);\r\n\r\n    up *= fovScale;\r\n    right *= fovScale;\r\n\r\n    return normalize(forward + right * screenPos.x + up * screenPos.y);\r\n}"},function(r,n,e){"use strict";e.r(n),n.default="vec3 RGBtoHSV(vec3 rgb) {\r\n float Cmax = max(rgb.r, max(rgb.g, rgb.b));\r\n float Cmin = min(rgb.r, min(rgb.g, rgb.b));\r\n float delta = Cmax - Cmin;\r\n\r\n vec3 hsv = vec3(0., 0., Cmax);\r\n\r\n if (Cmax > Cmin) {\r\n     hsv.y = delta / Cmax;\r\n\r\n     if (rgb.r == Cmax)\r\n         hsv.x = (rgb.g - rgb.b) / delta;\r\n     else {\r\n         if (rgb.g == Cmax)\r\n             hsv.x = 2. + (rgb.b - rgb.r) / delta;\r\n         else\r\n             hsv.x = 4. + (rgb.r - rgb.g) / delta;\r\n     }\r\n     hsv.x = fract(hsv.x / 6.);\r\n }\r\n return hsv;\r\n}\r\n\r\nvec3 HSVtoRGB(vec3 c) {\r\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\r\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\r\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\r\n}\r\n\r\nvec3 RGBtoHSL(vec3 color) {\r\n vec3 hsl; // init to 0 to avoid warnings ? (and reverse if + remove first part)\r\n\r\n float fmin = min(min(color.r, color.g), color.b); //Min. value of RGB\r\n float fmax = max(max(color.r, color.g), color.b); //Max. value of RGB\r\n float delta = fmax - fmin; //Delta RGB value\r\n\r\n hsl.z = (fmax + fmin) / 2.0; // Luminance\r\n\r\n if (delta == 0.0) //This is a gray, no chroma...\r\n {\r\n     hsl.x = 0.0; // Hue\r\n     hsl.y = 0.0; // Saturation\r\n } else //Chromatic data...\r\n {\r\n     if (hsl.z < 0.5)\r\n         hsl.y = delta / (fmax + fmin); // Saturation\r\n     else\r\n         hsl.y = delta / (2.0 - fmax - fmin); // Saturation\r\n\r\n     float deltaR = (((fmax - color.r) / 6.0) + (delta / 2.0)) / delta;\r\n     float deltaG = (((fmax - color.g) / 6.0) + (delta / 2.0)) / delta;\r\n     float deltaB = (((fmax - color.b) / 6.0) + (delta / 2.0)) / delta;\r\n\r\n     if (color.r == fmax)\r\n         hsl.x = deltaB - deltaG; // Hue\r\n     else if (color.g == fmax)\r\n         hsl.x = (1.0 / 3.0) + deltaR - deltaB; // Hue\r\n     else if (color.b == fmax)\r\n         hsl.x = (2.0 / 3.0) + deltaG - deltaR; // Hue\r\n\r\n     if (hsl.x < 0.0)\r\n         hsl.x += 1.0; // Hue\r\n     else if (hsl.x > 1.0)\r\n         hsl.x -= 1.0; // Hue\r\n }\r\n\r\n return hsl;\r\n}\r\n\r\nvec3 HSLtoRGB(vec3 c) {\r\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0);\r\n\r\n    return c.z + c.y * (rgb-0.5)*(1.0-abs(2.0*c.z-1.0));\r\n}"},function(r,n,e){"use strict";e.r(n),n.default='[\r\n    "perlin_noise",\r\n    "simplex_noise"\r\n]'},function(r,n,e){"use strict";e.r(n),n.default='[\r\n    "perlin_noise_2d",\r\n    "perlin_noise_3d",\r\n    "perlin_noise_4d"\r\n]'},function(r,n,e){"use strict";e.r(n),n.default="vec4 perlin_noise_2d_permute(vec4 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\r\nvec2 perlin_noise_2d_fade(vec2 t) { return t*t*t*(t*(t*6.0-15.0)+10.0); }\r\n\r\nfloat perlin_noise_2d(vec2 P) {\r\n    vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);\r\n    vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);\r\n    Pi = mod(Pi, 289.0); // To avoid truncation effects in permutation\r\n    vec4 ix = Pi.xzxz;\r\n    vec4 iy = Pi.yyww;\r\n    vec4 fx = Pf.xzxz;\r\n    vec4 fy = Pf.yyww;\r\n    vec4 i = perlin_noise_2d_permute(perlin_noise_2d_permute(ix) + iy);\r\n    vec4 gx = 2.0 * fract(i * 0.0243902439) - 1.0; // 1/41 = 0.024...\r\n    vec4 gy = abs(gx) - 0.5;\r\n    vec4 tx = floor(gx + 0.5);\r\n    gx = gx - tx;\r\n    vec2 g00 = vec2(gx.x,gy.x);\r\n    vec2 g10 = vec2(gx.y,gy.y);\r\n    vec2 g01 = vec2(gx.z,gy.z);\r\n    vec2 g11 = vec2(gx.w,gy.w);\r\n    vec4 norm = 1.79284291400159 - 0.85373472095314 * \r\n    vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11));\r\n    g00 *= norm.x;\r\n    g01 *= norm.y;\r\n    g10 *= norm.z;\r\n    g11 *= norm.w;\r\n    float n00 = dot(g00, vec2(fx.x, fy.x));\r\n    float n10 = dot(g10, vec2(fx.y, fy.y));\r\n    float n01 = dot(g01, vec2(fx.z, fy.z));\r\n    float n11 = dot(g11, vec2(fx.w, fy.w));\r\n    vec2 fade_xy = perlin_noise_2d_fade(Pf.xy);\r\n    vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);\r\n    float n_xy = mix(n_x.x, n_x.y, fade_xy.y);\r\n    return (2.3 * n_xy) / 2. + .5;\r\n}\r\n\r\nfloat fractal_perlin_noise_2d(vec2 p, int iterations) {\r\n    float total = 0.;\r\n    float divide = 0.;\r\n\r\n    float scale = 1.;\r\n\r\n    for (int iter = 0; iter < 10; iter++) {\r\n        if (iter >= iterations) {\r\n            break;\r\n        }\r\n        \r\n        total += perlin_noise_2d(p / scale) * scale;\r\n        divide += scale;\r\n        \r\n        scale *= .5;\r\n    }\r\n\r\n    return total / divide;\r\n}\r\n\r\nvec2 curl_perlin_noise_2d(vec2 p) {\r\n    const float DX = 0.01;\r\n\r\n    float v = perlin_noise_2d(p) * 2. - 1.;\r\n    float x = perlin_noise_2d(p + vec2(DX, 0.)) * 2. - 1.;\r\n    float y = perlin_noise_2d(p + vec2(0., DX)) * 2. - 1.;\r\n    return normalize(vec2(v - x, v - y));\r\n}\r\n\r\nvec2 curl_fractal_perlin_noise_2d(vec2 p, int iterations) {\r\n    const float DX = 0.01;\r\n\r\n    float v = fractal_perlin_noise_2d(p, iterations) * 2. - 1.;\r\n    float x = fractal_perlin_noise_2d(p + vec2(DX, 0.), iterations) * 2. - 1.;\r\n    float y = fractal_perlin_noise_2d(p + vec2(0., DX), iterations) * 2. - 1.;\r\n    return normalize(vec2(v - x, v - y));\r\n}"},function(r,n,e){"use strict";e.r(n),n.default="vec4 perlin_noise_3d_permute(vec4 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\r\nvec4 perlin_noise_3d_taylorInvSqrt(vec4 r) { return 1.79284291400159 - 0.85373472095314 * r; }\r\nvec3 perlin_noise_3d_fade(vec3 t) { return t*t*t*(t*(t*6.0-15.0)+10.0); }\r\n\r\nfloat perlin_noise_3d(vec3 P){\r\n    vec3 Pi0 = floor(P); // Integer part for indexing\r\n    vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\r\n    Pi0 = mod(Pi0, 289.0);\r\n    Pi1 = mod(Pi1, 289.0);\r\n    vec3 Pf0 = fract(P); // Fractional part for interpolation\r\n    vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\r\n    vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\r\n    vec4 iy = vec4(Pi0.yy, Pi1.yy);\r\n    vec4 iz0 = Pi0.zzzz;\r\n    vec4 iz1 = Pi1.zzzz;\r\n\r\n    vec4 ixy = perlin_noise_3d_permute(perlin_noise_3d_permute(ix) + iy);\r\n    vec4 ixy0 = perlin_noise_3d_permute(ixy + iz0);\r\n    vec4 ixy1 = perlin_noise_3d_permute(ixy + iz1);\r\n\r\n    vec4 gx0 = ixy0 / 7.0;\r\n    vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\r\n    gx0 = fract(gx0);\r\n    vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\r\n    vec4 sz0 = step(gz0, vec4(0.0));\r\n    gx0 -= sz0 * (step(0.0, gx0) - 0.5);\r\n    gy0 -= sz0 * (step(0.0, gy0) - 0.5);\r\n\r\n    vec4 gx1 = ixy1 / 7.0;\r\n    vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\r\n    gx1 = fract(gx1);\r\n    vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\r\n    vec4 sz1 = step(gz1, vec4(0.0));\r\n    gx1 -= sz1 * (step(0.0, gx1) - 0.5);\r\n    gy1 -= sz1 * (step(0.0, gy1) - 0.5);\r\n\r\n    vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\r\n    vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\r\n    vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\r\n    vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\r\n    vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\r\n    vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\r\n    vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\r\n    vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\r\n\r\n    vec4 norm0 = perlin_noise_3d_taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\r\n    g000 *= norm0.x;\r\n    g010 *= norm0.y;\r\n    g100 *= norm0.z;\r\n    g110 *= norm0.w;\r\n    vec4 norm1 = perlin_noise_3d_taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\r\n    g001 *= norm1.x;\r\n    g011 *= norm1.y;\r\n    g101 *= norm1.z;\r\n    g111 *= norm1.w;\r\n\r\n    float n000 = dot(g000, Pf0);\r\n    float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\r\n    float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\r\n    float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\r\n    float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\r\n    float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\r\n    float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\r\n    float n111 = dot(g111, Pf1);\r\n\r\n    vec3 fade_xyz = perlin_noise_3d_fade(Pf0);\r\n    vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\r\n    vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\r\n    float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \r\n    return (2.2 * n_xyz) / 2. + .5;\r\n}\r\n\r\nfloat fractal_perlin_noise_3d(vec3 p, int iterations) {\r\n    float total = 0.;\r\n    float divide = 0.;\r\n\r\n    float scale = 1.;\r\n\r\n    for (int iter = 0; iter < 10; iter++) {\r\n        if (iter >= iterations) {\r\n            break;\r\n        }\r\n        \r\n        total += perlin_noise_3d(p / scale) * scale;\r\n        divide += scale;\r\n        \r\n        scale *= .5;\r\n    }\r\n\r\n    return total / divide;\r\n}\r\n\r\nvec3 curl_perlin_noise_3d(vec3 p) {\r\n    const float DX = 0.01;\r\n\r\n    float v = perlin_noise_3d(p) * 2. - 1.;\r\n    float x = perlin_noise_3d(p + vec3(DX, 0., 0.)) * 2. - 1.;\r\n    float y = perlin_noise_3d(p + vec3(0., DX, 0.)) * 2. - 1.;\r\n    float z = perlin_noise_3d(p + vec3(0., 0., DX)) * 2. - 1.;\r\n    return normalize(vec3(v - x, v - y, v - x));\r\n}\r\n\r\nvec3 curl_fractal_perlin_noise_3d(vec3 p, int iterations) {\r\n    const float DX = 0.01;\r\n\r\n    float v = fractal_perlin_noise_3d(p, iterations) * 2. - 1.;\r\n    float x = fractal_perlin_noise_3d(p + vec3(DX, 0., 0.), iterations) * 2. - 1.;\r\n    float y = fractal_perlin_noise_3d(p + vec3(0., DX, 0.), iterations) * 2. - 1.;\r\n    float z = fractal_perlin_noise_3d(p + vec3(0., 0., DX), iterations) * 2. - 1.;\r\n    return normalize(vec3(v - x, v - y, v - z));\r\n}"},function(r,n,e){"use strict";e.r(n),n.default="vec4 perlin_noise_4d_permute(vec4 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\r\nvec4 perlin_noise_4d_taylorInvSqrt(vec4 r) { return 1.79284291400159 - 0.85373472095314 * r; }\r\nvec4 perlin_noise_4d_fade(vec4 t) { return t*t*t*(t*(t*6.0-15.0)+10.0); }\r\n\r\nfloat perlin_noise_4d(vec4 P) {\r\n    vec4 Pi0 = floor(P); // Integer part for indexing\r\n    vec4 Pi1 = Pi0 + 1.0; // Integer part + 1\r\n    Pi0 = mod(Pi0, 289.0);\r\n    Pi1 = mod(Pi1, 289.0);\r\n    vec4 Pf0 = fract(P); // Fractional part for interpolation\r\n    vec4 Pf1 = Pf0 - 1.0; // Fractional part - 1.0\r\n    vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\r\n    vec4 iy = vec4(Pi0.yy, Pi1.yy);\r\n    vec4 iz0 = vec4(Pi0.zzzz);\r\n    vec4 iz1 = vec4(Pi1.zzzz);\r\n    vec4 iw0 = vec4(Pi0.wwww);\r\n    vec4 iw1 = vec4(Pi1.wwww);\r\n\r\n    vec4 ixy = perlin_noise_4d_permute(perlin_noise_4d_permute(ix) + iy);\r\n    vec4 ixy0 = perlin_noise_4d_permute(ixy + iz0);\r\n    vec4 ixy1 = perlin_noise_4d_permute(ixy + iz1);\r\n    vec4 ixy00 = perlin_noise_4d_permute(ixy0 + iw0);\r\n    vec4 ixy01 = perlin_noise_4d_permute(ixy0 + iw1);\r\n    vec4 ixy10 = perlin_noise_4d_permute(ixy1 + iw0);\r\n    vec4 ixy11 = perlin_noise_4d_permute(ixy1 + iw1);\r\n\r\n    vec4 gx00 = ixy00 / 7.0;\r\n    vec4 gy00 = floor(gx00) / 7.0;\r\n    vec4 gz00 = floor(gy00) / 6.0;\r\n    gx00 = fract(gx00) - 0.5;\r\n    gy00 = fract(gy00) - 0.5;\r\n    gz00 = fract(gz00) - 0.5;\r\n    vec4 gw00 = vec4(0.75) - abs(gx00) - abs(gy00) - abs(gz00);\r\n    vec4 sw00 = step(gw00, vec4(0.0));\r\n    gx00 -= sw00 * (step(0.0, gx00) - 0.5);\r\n    gy00 -= sw00 * (step(0.0, gy00) - 0.5);\r\n\r\n    vec4 gx01 = ixy01 / 7.0;\r\n    vec4 gy01 = floor(gx01) / 7.0;\r\n    vec4 gz01 = floor(gy01) / 6.0;\r\n    gx01 = fract(gx01) - 0.5;\r\n    gy01 = fract(gy01) - 0.5;\r\n    gz01 = fract(gz01) - 0.5;\r\n    vec4 gw01 = vec4(0.75) - abs(gx01) - abs(gy01) - abs(gz01);\r\n    vec4 sw01 = step(gw01, vec4(0.0));\r\n    gx01 -= sw01 * (step(0.0, gx01) - 0.5);\r\n    gy01 -= sw01 * (step(0.0, gy01) - 0.5);\r\n\r\n    vec4 gx10 = ixy10 / 7.0;\r\n    vec4 gy10 = floor(gx10) / 7.0;\r\n    vec4 gz10 = floor(gy10) / 6.0;\r\n    gx10 = fract(gx10) - 0.5;\r\n    gy10 = fract(gy10) - 0.5;\r\n    gz10 = fract(gz10) - 0.5;\r\n    vec4 gw10 = vec4(0.75) - abs(gx10) - abs(gy10) - abs(gz10);\r\n    vec4 sw10 = step(gw10, vec4(0.0));\r\n    gx10 -= sw10 * (step(0.0, gx10) - 0.5);\r\n    gy10 -= sw10 * (step(0.0, gy10) - 0.5);\r\n\r\n    vec4 gx11 = ixy11 / 7.0;\r\n    vec4 gy11 = floor(gx11) / 7.0;\r\n    vec4 gz11 = floor(gy11) / 6.0;\r\n    gx11 = fract(gx11) - 0.5;\r\n    gy11 = fract(gy11) - 0.5;\r\n    gz11 = fract(gz11) - 0.5;\r\n    vec4 gw11 = vec4(0.75) - abs(gx11) - abs(gy11) - abs(gz11);\r\n    vec4 sw11 = step(gw11, vec4(0.0));\r\n    gx11 -= sw11 * (step(0.0, gx11) - 0.5);\r\n    gy11 -= sw11 * (step(0.0, gy11) - 0.5);\r\n\r\n    vec4 g0000 = vec4(gx00.x,gy00.x,gz00.x,gw00.x);\r\n    vec4 g1000 = vec4(gx00.y,gy00.y,gz00.y,gw00.y);\r\n    vec4 g0100 = vec4(gx00.z,gy00.z,gz00.z,gw00.z);\r\n    vec4 g1100 = vec4(gx00.w,gy00.w,gz00.w,gw00.w);\r\n    vec4 g0010 = vec4(gx10.x,gy10.x,gz10.x,gw10.x);\r\n    vec4 g1010 = vec4(gx10.y,gy10.y,gz10.y,gw10.y);\r\n    vec4 g0110 = vec4(gx10.z,gy10.z,gz10.z,gw10.z);\r\n    vec4 g1110 = vec4(gx10.w,gy10.w,gz10.w,gw10.w);\r\n    vec4 g0001 = vec4(gx01.x,gy01.x,gz01.x,gw01.x);\r\n    vec4 g1001 = vec4(gx01.y,gy01.y,gz01.y,gw01.y);\r\n    vec4 g0101 = vec4(gx01.z,gy01.z,gz01.z,gw01.z);\r\n    vec4 g1101 = vec4(gx01.w,gy01.w,gz01.w,gw01.w);\r\n    vec4 g0011 = vec4(gx11.x,gy11.x,gz11.x,gw11.x);\r\n    vec4 g1011 = vec4(gx11.y,gy11.y,gz11.y,gw11.y);\r\n    vec4 g0111 = vec4(gx11.z,gy11.z,gz11.z,gw11.z);\r\n    vec4 g1111 = vec4(gx11.w,gy11.w,gz11.w,gw11.w);\r\n\r\n    vec4 norm00 = perlin_noise_4d_taylorInvSqrt(vec4(dot(g0000, g0000), dot(g0100, g0100), dot(g1000, g1000), dot(g1100, g1100)));\r\n    g0000 *= norm00.x;\r\n    g0100 *= norm00.y;\r\n    g1000 *= norm00.z;\r\n    g1100 *= norm00.w;\r\n\r\n    vec4 norm01 = perlin_noise_4d_taylorInvSqrt(vec4(dot(g0001, g0001), dot(g0101, g0101), dot(g1001, g1001), dot(g1101, g1101)));\r\n    g0001 *= norm01.x;\r\n    g0101 *= norm01.y;\r\n    g1001 *= norm01.z;\r\n    g1101 *= norm01.w;\r\n\r\n    vec4 norm10 = perlin_noise_4d_taylorInvSqrt(vec4(dot(g0010, g0010), dot(g0110, g0110), dot(g1010, g1010), dot(g1110, g1110)));\r\n    g0010 *= norm10.x;\r\n    g0110 *= norm10.y;\r\n    g1010 *= norm10.z;\r\n    g1110 *= norm10.w;\r\n\r\n    vec4 norm11 = perlin_noise_4d_taylorInvSqrt(vec4(dot(g0011, g0011), dot(g0111, g0111), dot(g1011, g1011), dot(g1111, g1111)));\r\n    g0011 *= norm11.x;\r\n    g0111 *= norm11.y;\r\n    g1011 *= norm11.z;\r\n    g1111 *= norm11.w;\r\n\r\n    float n0000 = dot(g0000, Pf0);\r\n    float n1000 = dot(g1000, vec4(Pf1.x, Pf0.yzw));\r\n    float n0100 = dot(g0100, vec4(Pf0.x, Pf1.y, Pf0.zw));\r\n    float n1100 = dot(g1100, vec4(Pf1.xy, Pf0.zw));\r\n    float n0010 = dot(g0010, vec4(Pf0.xy, Pf1.z, Pf0.w));\r\n    float n1010 = dot(g1010, vec4(Pf1.x, Pf0.y, Pf1.z, Pf0.w));\r\n    float n0110 = dot(g0110, vec4(Pf0.x, Pf1.yz, Pf0.w));\r\n    float n1110 = dot(g1110, vec4(Pf1.xyz, Pf0.w));\r\n    float n0001 = dot(g0001, vec4(Pf0.xyz, Pf1.w));\r\n    float n1001 = dot(g1001, vec4(Pf1.x, Pf0.yz, Pf1.w));\r\n    float n0101 = dot(g0101, vec4(Pf0.x, Pf1.y, Pf0.z, Pf1.w));\r\n    float n1101 = dot(g1101, vec4(Pf1.xy, Pf0.z, Pf1.w));\r\n    float n0011 = dot(g0011, vec4(Pf0.xy, Pf1.zw));\r\n    float n1011 = dot(g1011, vec4(Pf1.x, Pf0.y, Pf1.zw));\r\n    float n0111 = dot(g0111, vec4(Pf0.x, Pf1.yzw));\r\n    float n1111 = dot(g1111, Pf1);\r\n\r\n    vec4 fade_xyzw = perlin_noise_4d_fade(Pf0);\r\n    vec4 n_0w = mix(vec4(n0000, n1000, n0100, n1100), vec4(n0001, n1001, n0101, n1101), fade_xyzw.w);\r\n    vec4 n_1w = mix(vec4(n0010, n1010, n0110, n1110), vec4(n0011, n1011, n0111, n1111), fade_xyzw.w);\r\n    vec4 n_zw = mix(n_0w, n_1w, fade_xyzw.z);\r\n    vec2 n_yzw = mix(n_zw.xy, n_zw.zw, fade_xyzw.y);\r\n    float n_xyzw = mix(n_yzw.x, n_yzw.y, fade_xyzw.x);\r\n    return (2.2 * n_xyzw) / 2. + .5;\r\n}\r\n\r\nfloat fractal_perlin_noise_4d(vec4 p, int iterations) {\r\n    float total = 0.;\r\n    float divide = 0.;\r\n\r\n    float scale = 1.;\r\n\r\n    for (int iter = 0; iter < 10; iter++) {\r\n        if (iter >= iterations) {\r\n            break;\r\n        }\r\n        \r\n        total += perlin_noise_4d(p / scale) * scale;\r\n        divide += scale;\r\n        \r\n        scale *= .5;\r\n    }\r\n\r\n    return total / divide;\r\n}\r\n\r\nvec4 curl_perlin_noise_4d(vec4 p) {\r\n    const float DX = 0.01;\r\n\r\n    float v = perlin_noise_4d(p) * 2. - 1.;\r\n    float x = perlin_noise_4d(p + vec4(DX, 0., 0., 0.)) * 2. - 1.;\r\n    float y = perlin_noise_4d(p + vec4(0., DX, 0., 0.)) * 2. - 1.;\r\n    float z = perlin_noise_4d(p + vec4(0., 0., DX, 0.)) * 2. - 1.;\r\n    float w = perlin_noise_4d(p + vec4(0., 0., 0., DX)) * 2. - 1.;\r\n    return normalize(vec4(v - x, v - y, v - x, v - w));\r\n}\r\n\r\nvec4 curl_fractal_perlin_noise_4d(vec4 p, int iterations) {\r\n    const float DX = 0.01;\r\n\r\n    float v = fractal_perlin_noise_4d(p, iterations) * 2. - 1.;\r\n    float x = fractal_perlin_noise_4d(p + vec4(DX, 0., 0., 0.), iterations) * 2. - 1.;\r\n    float y = fractal_perlin_noise_4d(p + vec4(0., DX, 0., 0.), iterations) * 2. - 1.;\r\n    float z = fractal_perlin_noise_4d(p + vec4(0., 0., DX, 0.), iterations) * 2. - 1.;\r\n    float w = fractal_perlin_noise_4d(p + vec4(0., 0., 0., DX), iterations) * 2. - 1.;\r\n    return normalize(vec4(v - x, v - y, v - x, v - w));\r\n}"},function(r,n,e){"use strict";e.r(n),n.default='[\r\n    "sdf",\r\n    "__raymarch__"\r\n]'},function(r,n,e){"use strict";e.r(n),n.default="float sdf_sphere_basic(vec3 pos) {\r\n    return length(pos) - 1.;\r\n}\r\n\r\nfloat sdf_sphere(vec3 pos, vec3 center, float radius) {\r\n    return sdf_sphere_basic((pos - center) / radius) * radius;\r\n}\r\n\r\nfloat sdf_box_basic(vec3 pos, vec3 scale) {\r\n    vec3 q = abs(pos) - scale;\r\n    return length(max(q, 0.0)) + min(max(q.x, max(q.y, q.z)), 0.0);\r\n}\r\n\r\nfloat sdf_box(vec3 pos, vec3 a, vec3 b) {\r\n    vec3 diff = abs(a - b);\r\n    vec3 avg = (a + b) / 2.;\r\n\r\n    return sdf_box_basic(pos - avg, diff);\r\n}\r\n\r\nfloat sdf_plane(vec3 pos, vec4 n) {\r\n    return dot(pos, n.xyz) + n.w;\r\n}\r\n\r\nfloat sdf_union(float d1, float d2) {\r\n    return min(d1, d2);\r\n}\r\n\r\nfloat sdf_smooth_union(float d1, float d2, float k) {\r\n    float h = clamp(0.5 + 0.5 * (d2 - d1) / k, 0.0, 1.0);\r\n    return mix(d2, d1, h) - k * h * (1.0 - h);\r\n} \r\n\r\nfloat sdf_intersection(float d1, float d2) {\r\n    return max(d1, d2);\r\n}\r\n\r\nfloat sdf_smooth_intersection(float d1, float d2, float k) {\r\n    float h = clamp(0.5 - 0.5 * (d2 - d1) / k, 0.0, 1.0);\r\n    return mix(d2, d1, h) + k * h * (1.0 - h);\r\n}\r\n\r\nfloat sdf_subtraction(float d1, float d2) {\r\n    return sdf_intersection(d1, -d2);\r\n}\r\n\r\nfloat sdf_smooth_subtraction(float d1, float d2, float k) {\r\n    float h = clamp(0.5 - 0.5 * (d2 + d1) / k, 0.0, 1.0);\r\n    return mix(d2, -d1, h) + k * h * (1.0 - h);\r\n}"},function(r,n,e){"use strict";e.r(n),n.default='[\r\n    "simplex_noise_2d",\r\n    "simplex_noise_3d",\r\n    "simplex_noise_4d"\r\n]'},function(r,n,e){"use strict";e.r(n),n.default="vec3 simplex_noise_2d_permute(vec3 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\r\n\r\nfloat simplex_noise_2d(vec2 v) {\r\n    const vec4 C = vec4(0.211324865405187, 0.366025403784439,\r\n        -0.577350269189626, 0.024390243902439);\r\n    vec2 i  = floor(v + dot(v, C.yy) );\r\n    vec2 x0 = v -   i + dot(i, C.xx);\r\n    vec2 i1;\r\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\r\n    vec4 x12 = x0.xyxy + C.xxzz;\r\n    x12.xy -= i1;\r\n    i = mod(i, 289.0);\r\n    vec3 p = simplex_noise_2d_permute( simplex_noise_2d_permute( i.y + vec3(0.0, i1.y, 1.0 ))\r\n    + i.x + vec3(0.0, i1.x, 1.0 ));\r\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy),\r\n    dot(x12.zw,x12.zw)), 0.0);\r\n    m = m*m ;\r\n    m = m*m ;\r\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\r\n    vec3 h = abs(x) - 0.5;\r\n    vec3 ox = floor(x + 0.5);\r\n    vec3 a0 = x - ox;\r\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\r\n    vec3 g;\r\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\r\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\r\n    return (130.0 * dot(m, g)) / 2. + .5;\r\n}\r\n\r\nfloat fractal_simplex_noise_2d(vec2 p, int iterations) {\r\n    float total = 0.;\r\n    float divide = 0.;\r\n\r\n    float scale = 1.;\r\n\r\n    for (int iter = 0; iter < 10; iter++) {\r\n        if (iter >= iterations) {\r\n            break;\r\n        }\r\n        \r\n        total += simplex_noise_2d(p / scale) * scale;\r\n        divide += scale;\r\n        \r\n        scale *= .5;\r\n    }\r\n\r\n    return total / divide;\r\n}\r\n\r\nvec2 curl_simplex_noise_2d(vec2 p) {\r\n    const float DX = 0.01;\r\n\r\n    float v = simplex_noise_2d(p) * 2. - 1.;\r\n    float x = simplex_noise_2d(p + vec2(DX, 0.)) * 2. - 1.;\r\n    float y = simplex_noise_2d(p + vec2(0., DX)) * 2. - 1.;\r\n    return normalize(vec2(v - x, v - y));\r\n}\r\n\r\nvec2 curl_fractal_simplex_noise_2d(vec2 p, int iterations) {\r\n    const float DX = 0.01;\r\n\r\n    float v = fractal_simplex_noise_2d(p, iterations) * 2. - 1.;\r\n    float x = fractal_simplex_noise_2d(p + vec2(DX, 0.), iterations) * 2. - 1.;\r\n    float y = fractal_simplex_noise_2d(p + vec2(0., DX), iterations) * 2. - 1.;\r\n    return normalize(vec2(v - x, v - y));\r\n}"},function(r,n,e){"use strict";e.r(n),n.default="vec4 simplex_noise_3d_permute(vec4 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\r\nvec4 simplex_noise_3d_taylorInvSqrt(vec4 r) { return 1.79284291400159 - 0.85373472095314 * r; }\r\n\r\nfloat simplex_noise_3d(vec3 v) { \r\n    const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\r\n    const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\r\n\r\n    // First corner\r\n    vec3 i  = floor(v + dot(v, C.yyy) );\r\n    vec3 x0 =   v - i + dot(i, C.xxx) ;\r\n\r\n    // Other corners\r\n    vec3 g = step(x0.yzx, x0.xyz);\r\n    vec3 l = 1.0 - g;\r\n    vec3 i1 = min( g.xyz, l.zxy );\r\n    vec3 i2 = max( g.xyz, l.zxy );\r\n\r\n    //  x0 = x0 - 0. + 0.0 * C \r\n    vec3 x1 = x0 - i1 + 1.0 * C.xxx;\r\n    vec3 x2 = x0 - i2 + 2.0 * C.xxx;\r\n    vec3 x3 = x0 - 1. + 3.0 * C.xxx;\r\n\r\n    // Permutations\r\n    i = mod(i, 289.0 ); \r\n    vec4 p = simplex_noise_3d_permute( simplex_noise_3d_permute( simplex_noise_3d_permute( \r\n            i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\r\n        + i.y + vec4(0.0, i1.y, i2.y, 1.0 )) \r\n        + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\r\n\r\n    // Gradients\r\n    // ( N*N points uniformly over a square, mapped onto an octahedron.)\r\n    float n_ = 1.0/7.0; // N=7\r\n    vec3  ns = n_ * D.wyz - D.xzx;\r\n\r\n    vec4 j = p - 49.0 * floor(p * ns.z *ns.z);  //  mod(p,N*N)\r\n\r\n    vec4 x_ = floor(j * ns.z);\r\n    vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\r\n\r\n    vec4 x = x_ *ns.x + ns.yyyy;\r\n    vec4 y = y_ *ns.x + ns.yyyy;\r\n    vec4 h = 1.0 - abs(x) - abs(y);\r\n\r\n    vec4 b0 = vec4( x.xy, y.xy );\r\n    vec4 b1 = vec4( x.zw, y.zw );\r\n\r\n    vec4 s0 = floor(b0)*2.0 + 1.0;\r\n    vec4 s1 = floor(b1)*2.0 + 1.0;\r\n    vec4 sh = -step(h, vec4(0.0));\r\n\r\n    vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\r\n    vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\r\n\r\n    vec3 p0 = vec3(a0.xy,h.x);\r\n    vec3 p1 = vec3(a0.zw,h.y);\r\n    vec3 p2 = vec3(a1.xy,h.z);\r\n    vec3 p3 = vec3(a1.zw,h.w);\r\n\r\n    //Normalise gradients\r\n    vec4 norm = simplex_noise_3d_taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\r\n    p0 *= norm.x;\r\n    p1 *= norm.y;\r\n    p2 *= norm.z;\r\n    p3 *= norm.w;\r\n\r\n    // Mix final noise value\r\n    vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\r\n    m = m * m;\r\n    return (42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), \r\n                                dot(p2,x2), dot(p3,x3) ) )) / 2. + .5;\r\n}\r\n\r\nfloat fractal_simplex_noise_3d(vec3 p, int iterations) {\r\n    float total = 0.;\r\n    float divide = 0.;\r\n\r\n    float scale = 1.;\r\n\r\n    for (int iter = 0; iter < 10; iter++) {\r\n        if (iter >= iterations) {\r\n            break;\r\n        }\r\n        \r\n        total += simplex_noise_3d(p / scale) * scale;\r\n        divide += scale;\r\n        \r\n        scale *= .5;\r\n    }\r\n\r\n    return total / divide;\r\n}\r\n\r\nvec3 curl_simplex_noise_3d(vec3 p) {\r\n    const float DX = 0.01;\r\n\r\n    float v = simplex_noise_3d(p) * 2. - 1.;\r\n    float x = simplex_noise_3d(p + vec3(DX, 0., 0.)) * 2. - 1.;\r\n    float y = simplex_noise_3d(p + vec3(0., DX, 0.)) * 2. - 1.;\r\n    float z = simplex_noise_3d(p + vec3(0., 0., DX)) * 2. - 1.;\r\n    return normalize(vec3(v - x, v - y, v - x));\r\n}\r\n\r\nvec3 curl_fractal_simplex_noise_3d(vec3 p, int iterations) {\r\n    const float DX = 0.01;\r\n\r\n    float v = fractal_simplex_noise_3d(p, iterations) * 2. - 1.;\r\n    float x = fractal_simplex_noise_3d(p + vec3(DX, 0., 0.), iterations) * 2. - 1.;\r\n    float y = fractal_simplex_noise_3d(p + vec3(0., DX, 0.), iterations) * 2. - 1.;\r\n    float z = fractal_simplex_noise_3d(p + vec3(0., 0., DX), iterations) * 2. - 1.;\r\n    return normalize(vec3(v - x, v - y, v - z));\r\n}"},function(r,n,e){"use strict";e.r(n),n.default="vec4 simplex_noise_4d_permute(vec4 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\r\nfloat simplex_noise_4d_permute(float x) { return floor(mod(((x*34.0)+1.0)*x, 289.0)); }\r\nvec4 simplex_noise_4d_taylorInvSqrt(vec4 r) { return 1.79284291400159 - 0.85373472095314 * r; }\r\nfloat simplex_noise_4d_taylorInvSqrt(float r) { return 1.79284291400159 - 0.85373472095314 * r; }\r\n\r\nvec4 simplex_noise_4d_grad(float j, vec4 ip) {\r\n    const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\r\n    vec4 p,s;\r\n\r\n    p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\r\n    p.w = 1.5 - dot(abs(p.xyz), ones.xyz);\r\n    s = vec4(lessThan(p, vec4(0.0)));\r\n    p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www; \r\n\r\n    return p;\r\n}\r\n\r\nfloat simplex_noise_4d(vec4 v) {\r\n    const vec2  C = vec2( 0.138196601125010504,  // (5 - sqrt(5))/20  G4\r\n                        0.309016994374947451); // (sqrt(5) - 1)/4   F4\r\n    // First corner\r\n    vec4 i  = floor(v + dot(v, C.yyyy) );\r\n    vec4 x0 = v -   i + dot(i, C.xxxx);\r\n\r\n    // Other corners\r\n\r\n    // Rank sorting originally contributed by Bill Licea-Kane, AMD (formerly ATI)\r\n    vec4 i0;\r\n\r\n    vec3 isX = step( x0.yzw, x0.xxx );\r\n    vec3 isYZ = step( x0.zww, x0.yyz );\r\n    //  i0.x = dot( isX, vec3( 1.0 ) );\r\n    i0.x = isX.x + isX.y + isX.z;\r\n    i0.yzw = 1.0 - isX;\r\n\r\n    //  i0.y += dot( isYZ.xy, vec2( 1.0 ) );\r\n    i0.y += isYZ.x + isYZ.y;\r\n    i0.zw += 1.0 - isYZ.xy;\r\n\r\n    i0.z += isYZ.z;\r\n    i0.w += 1.0 - isYZ.z;\r\n\r\n    // i0 now contains the unique values 0,1,2,3 in each channel\r\n    vec4 i3 = clamp( i0, 0.0, 1.0 );\r\n    vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\r\n    vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\r\n\r\n    //  x0 = x0 - 0.0 + 0.0 * C \r\n    vec4 x1 = x0 - i1 + 1.0 * C.xxxx;\r\n    vec4 x2 = x0 - i2 + 2.0 * C.xxxx;\r\n    vec4 x3 = x0 - i3 + 3.0 * C.xxxx;\r\n    vec4 x4 = x0 - 1.0 + 4.0 * C.xxxx;\r\n\r\n    // Permutations\r\n    i = mod(i, 289.0); \r\n    float j0 = simplex_noise_4d_permute( simplex_noise_4d_permute( simplex_noise_4d_permute( simplex_noise_4d_permute(i.w) + i.z) + i.y) + i.x);\r\n    vec4 j1 = simplex_noise_4d_permute( simplex_noise_4d_permute( simplex_noise_4d_permute( simplex_noise_4d_permute (\r\n            i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\r\n        + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\r\n        + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\r\n        + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\r\n    // Gradients\r\n    // ( 7*7*6 points uniformly over a cube, mapped onto a 4-octahedron.)\r\n    // 7*7*6 = 294, which is close to the ring size 17*17 = 289.\r\n\r\n    vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;\r\n\r\n    vec4 p0 = simplex_noise_4d_grad(j0,   ip);\r\n    vec4 p1 = simplex_noise_4d_grad(j1.x, ip);\r\n    vec4 p2 = simplex_noise_4d_grad(j1.y, ip);\r\n    vec4 p3 = simplex_noise_4d_grad(j1.z, ip);\r\n    vec4 p4 = simplex_noise_4d_grad(j1.w, ip);\r\n\r\n    // Normalise gradients\r\n    vec4 norm = simplex_noise_4d_taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\r\n    p0 *= norm.x;\r\n    p1 *= norm.y;\r\n    p2 *= norm.z;\r\n    p3 *= norm.w;\r\n    p4 *= simplex_noise_4d_taylorInvSqrt(dot(p4,p4));\r\n\r\n    // Mix contributions from the five corners\r\n    vec3 m0 = max(0.6 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);\r\n    vec2 m1 = max(0.6 - vec2(dot(x3,x3), dot(x4,x4)            ), 0.0);\r\n    m0 = m0 * m0;\r\n    m1 = m1 * m1;\r\n    return (49.0 * ( dot(m0*m0, vec3( dot( p0, x0 ), dot( p1, x1 ), dot( p2, x2 )))\r\n            + dot(m1*m1, vec2( dot( p3, x3 ), dot( p4, x4 ) ) ) )) / 2. + .5;\r\n\r\n}\r\n\r\nfloat fractal_simplex_noise_4d(vec4 p, int iterations) {\r\n    float total = 0.;\r\n    float divide = 0.;\r\n\r\n    float scale = 1.;\r\n\r\n    for (int iter = 0; iter < 10; iter++) {\r\n        if (iter >= iterations) {\r\n            break;\r\n        }\r\n        \r\n        total += simplex_noise_4d(p / scale) * scale;\r\n        divide += scale;\r\n        \r\n        scale *= .5;\r\n    }\r\n\r\n    return total / divide;\r\n}\r\n\r\nvec4 curl_simplex_noise_4d(vec4 p) {\r\n    const float DX = 0.01;\r\n\r\n    float v = simplex_noise_4d(p) * 2. - 1.;\r\n    float x = simplex_noise_4d(p + vec4(DX, 0., 0., 0.)) * 2. - 1.;\r\n    float y = simplex_noise_4d(p + vec4(0., DX, 0., 0.)) * 2. - 1.;\r\n    float z = simplex_noise_4d(p + vec4(0., 0., DX, 0.)) * 2. - 1.;\r\n    float w = simplex_noise_4d(p + vec4(0., 0., 0., DX)) * 2. - 1.;\r\n    return normalize(vec4(v - x, v - y, v - x, v - w));\r\n}\r\n\r\nvec4 curl_fractal_simplex_noise_4d(vec4 p, int iterations) {\r\n    const float DX = 0.01;\r\n\r\n    float v = fractal_simplex_noise_4d(p, iterations) * 2. - 1.;\r\n    float x = fractal_simplex_noise_4d(p + vec4(DX, 0., 0., 0.), iterations) * 2. - 1.;\r\n    float y = fractal_simplex_noise_4d(p + vec4(0., DX, 0., 0.), iterations) * 2. - 1.;\r\n    float z = fractal_simplex_noise_4d(p + vec4(0., 0., DX, 0.), iterations) * 2. - 1.;\r\n    float w = fractal_simplex_noise_4d(p + vec4(0., 0., 0., DX), iterations) * 2. - 1.;\r\n    return normalize(vec4(v - x, v - y, v - x, v - w));\r\n}"},function(r,n,e){var t={"./__global__.fsh":0,"./__raymarch__.fsh":1,"./camera.fsh":2,"./color.fsh":3,"./noise":4,"./perlin_noise":5,"./perlin_noise_2d.fsh":6,"./perlin_noise_3d.fsh":7,"./perlin_noise_4d.fsh":8,"./raymarch":9,"./sdf.fsh":10,"./simplex_noise":11,"./simplex_noise_2d.fsh":12,"./simplex_noise_3d.fsh":13,"./simplex_noise_4d.fsh":14};function i(r){var n=o(r);return e(n)}function o(r){if(!e.o(t,r)){var n=new Error("Cannot find module '"+r+"'");throw n.code="MODULE_NOT_FOUND",n}return t[r]}i.keys=function(){return Object.keys(t)},i.resolve=o,r.exports=i,i.id=15},function(r,n,e){var t={"./__global__.fsh":0,"./__raymarch__.fsh":1,"./camera.fsh":2,"./color.fsh":3,"./noise":4,"./perlin_noise":5,"./perlin_noise_2d.fsh":6,"./perlin_noise_3d.fsh":7,"./perlin_noise_4d.fsh":8,"./raymarch":9,"./sdf.fsh":10,"./simplex_noise":11,"./simplex_noise_2d.fsh":12,"./simplex_noise_3d.fsh":13,"./simplex_noise_4d.fsh":14};function i(r){var n=o(r);return e(n)}function o(r){if(!e.o(t,r)){var n=new Error("Cannot find module '"+r+"'");throw n.code="MODULE_NOT_FOUND",n}return t[r]}i.keys=function(){return Object.keys(t)},i.resolve=o,r.exports=i,i.id=16},function(r,n,e){"use strict";e.r(n);var t={initShaderProgram:function(r,n,e){var i=t.loadShader(r,r.VERTEX_SHADER,n),o=t.loadShader(r,r.FRAGMENT_SHADER,e);if(null==i||null==o)return null;var a=r.createProgram();return r.attachShader(a,i),r.attachShader(a,o),r.linkProgram(a),r.getProgramParameter(a,r.LINK_STATUS)?a:(console.groupCollapsed("Shader Sketch Program Link Error"),console.error(r.getProgramInfoLog(a)),console.groupEnd(),null)},loadShader:function(r,n,e){var t=r.createShader(n);return r.shaderSource(t,e),r.compileShader(t),r.getShaderParameter(t,r.COMPILE_STATUS)?t:(console.groupCollapsed("Shader Sketch Shader Compilation Error"),console.error(r.getShaderInfoLog(t)),console.groupCollapsed("Shader Source..."),console.log(e),console.groupEnd(),console.groupEnd(),r.deleteShader(t),null)},parseUniformValues:function(){for(var r=arguments.length,n=new Array(r),e=0;e<r;e++)n[e]=arguments[e];return"string"==typeof n[0]&&(n[0]=n[0].replace(" ","").replace("[","").replace("]",""),n=n[0].split(",").map(parseFloat)),n[0]instanceof Array&&(n=n[0]),n}},i=t;function o(r){return function(r){if(Array.isArray(r)){for(var n=0,e=new Array(r.length);n<r.length;n++)e[n]=r[n];return e}}(r)||function(r){if(Symbol.iterator in Object(r)||"[object Arguments]"===Object.prototype.toString.call(r))return Array.from(r)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function a(r,n){for(var e=0;e<n.length;e++){var t=n[e];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(r,t.key,t)}}var c={int:{length:1,int:!0,setter:"1i",aliases:["int","i","int1","i1","1int","1i"]},float:{length:1,int:!1,setter:"1f",aliases:["float","f","float1","f1","1float","1f"]},ivec2:{length:2,int:!0,setter:"2i",aliases:["int2","i2","2int","2i","vec2i","ivec2"]},vec2:{length:2,int:!1,setter:"2f",aliases:["float2","f2","2float","2f","vec2"]},ivec3:{length:3,int:!0,setter:"3i",aliases:["int3","i3","3int","3i","vec3i","ivec3"]},vec3:{length:3,int:!1,setter:"3f",aliases:["float3","f3","3float","3f","vec3"]},ivec4:{length:4,int:!0,setter:"4i",aliases:["int4","i4","4int","4i","vec4i","ivec4"]},vec4:{length:4,int:!1,setter:"4f",aliases:["float4","f4","4float","4f","vec4"]}},l=function(){function r(n,e){!function(r,n){if(!(r instanceof n))throw new TypeError("Cannot call a class as a function")}(this,r),this.name=n,e=r.getType(e),this.type=e.type,this.arrayLength=e.arrayLength;for(var t=arguments.length,i=new Array(t>2?t-2:0),o=2;o<t;o++)i[o-2]=arguments[o];this.setValue.apply(this,i)}var n,e,t;return n=r,t=[{key:"getType",value:function(r){var n="unknown",e=-1,t=r.split("[");for(var i in t.length>1&&(t[1]=parseInt(t[1].replace("]","")),e=t[1]),c)c[i].aliases.indexOf(t[0])>-1&&(n=i);return{type:n,arrayLength:e}}},{key:"getValue",value:function(r,n){for(var e=arguments.length,t=new Array(e>2?e-2:0),o=2;o<e;o++)t[o-2]=arguments[o];for(var a=i.parseUniformValues.apply(i,t),l=c[r].length*(n>-1?n:1);a.length<l;)a.push(0);if(a=a.slice(0,l),c[r].int&&(a=a.map(Math.floor)),n>-1){for(var s=[];a.length>0;)s.push(a.splice(0,c[r].length));a=s}return a}}],(e=[{key:"setValue",value:function(){for(var n=arguments.length,e=new Array(n),t=0;t<n;t++)e[t]=arguments[t];this.value=r.getValue.apply(r,[this.type,this.arrayLength].concat(e))}},{key:"getUniformDeclaration",value:function(){return"uniform ".concat(this.type," ").concat(this.name).concat(this.arrayLength>-1?"[".concat(this.arrayLength,"]"):"",";")}},{key:"loadUniformLocation",value:function(r,n){this.location=r.getUniformLocation(n,this.name)}},{key:"setUniformValue",value:function(r){r["uniform".concat(c[this.type].setter).concat(this.arrayLength>-1?"v":"")].apply(r,[this.location].concat(o(this.value)))}}])&&a(n.prototype,e),t&&a(n,t),r}();function s(r){return function(r){if(Array.isArray(r)){for(var n=0,e=new Array(r.length);n<r.length;n++)e[n]=r[n];return e}}(r)||function(r){if(Symbol.iterator in Object(r)||"[object Arguments]"===Object.prototype.toString.call(r))return Array.from(r)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function f(r,n){for(var e=0;e<n.length;e++){var t=n[e];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(r,t.key,t)}}var u={},v=function(){function r(n,e){!function(r,n){if(!(r instanceof n))throw new TypeError("Cannot call a class as a function")}(this,r),this.name=n,this.code=e}var n,e,t;return n=r,t=[{key:"registerImport",value:function(n,e){u[n]=new r(n,e)}},{key:"getImport",value:function(r){return u[r]}},{key:"resolveImports",value:function(n){if(n.code instanceof Array){var e=[],t=!0,i=!1,o=void 0;try{for(var a,c=n.code[Symbol.iterator]();!(t=(a=c.next()).done);t=!0){var l=a.value;e.push.apply(e,s(r.resolveImports(r.getImport(l))))}}catch(r){i=!0,o=r}finally{try{t||null==c.return||c.return()}finally{if(i)throw o}}return e}return[n]}},{key:"resolveCode",value:function(n){n=(n=n.map((function(n){return r.resolveImports(n)}))).flat(1/0);var e=[],t=!0,i=!1,o=void 0;try{for(var a,c=n[Symbol.iterator]();!(t=(a=c.next()).done);t=!0){var l=a.value;-1==e.indexOf(l)&&e.push(l)}}catch(r){i=!0,o=r}finally{try{t||null==c.return||c.return()}finally{if(i)throw o}}return e.map((function(r){return r.getCode()})).join("\n")}}],(e=[{key:"getCode",value:function(){return"// --------------------\n// Import: ".concat(this.name,"\n// --------------------\n\n").concat(this.code,"\n")}}])&&f(n.prototype,e),t&&f(n,t),r}(),p=e(15),d=!0,y=!1,x=void 0;try{for(var g,h=p.keys()[Symbol.iterator]();!(d=(g=h.next()).done);d=!0){var m=g.value,_=e(16)("./".concat(m.substring(2))).default;m.endsWith(".fsh")||(_=JSON.parse(_)),m=m.replace("./","").replace(".fsh",""),u[m]=new v(m,_)}}catch(r){y=!0,x=r}finally{try{d||null==h.return||h.return()}finally{if(y)throw x}}var w=v;function b(r,n){for(var e=0;e<n.length;e++){var t=n[e];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(r,t.key,t)}}var z=function(){function r(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=t.blending,o=void 0===i?"linear":i,a=t.wrapping,c=void 0===a?"clamp":a,s=t.update,f=void 0!==s&&s;!function(r,n){if(!(r instanceof n))throw new TypeError("Cannot call a class as a function")}(this,r),this.name=n,this.image=e,this.blending=o||"linear",this.wrapping=c||"clamp",this.shouldUpdate=f||!1,this.resolutionUniform=new l("".concat(this.name,"_resolution"),"vec2",this.image.width,this.image.height),this.uniforms=[this.resolutionUniform]}var n,e,t;return n=r,(e=[{key:"update",value:function(r){this.resolutionUniform.setValue(this.image.width,this.image.height),this.shouldUpdate&&this.bindTexture(r)}},{key:"getUniformDeclaration",value:function(){return"uniform sampler2D ".concat(this.name,";")}},{key:"loadUniformLocation",value:function(r,n){this.location=r.getUniformLocation(n,this.name)}},{key:"bindTexture",value:function(r){this.unbindTexture(r),this.texture=r.createTexture();var n,e,t=r.RGBA,i=r.RGBA,o=r.UNSIGNED_BYTE;switch(r.bindTexture(r.TEXTURE_2D,this.texture),r.texImage2D(r.TEXTURE_2D,0,t,i,o,this.image),this.blending.toLowerCase()){case"linear":n=r.LINEAR;break;case"nearest":n=r.NEAREST}switch(this.wrapping.toLowerCase()){case"repeat":e=r.REPEAT;break;case"clamp":e=r.CLAMP_TO_EDGE;break;case"mirror":e=r.MIRRORED_REPEAT}r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,n),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,e),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,e)}},{key:"unbindTexture",value:function(r){this.texture&&r.deleteTexture(this.texture)}},{key:"loadUniformLocation",value:function(r,n){this.location=r.getUniformLocation(n,this.name)}}])&&b(n.prototype,e),t&&b(n,t),r}();function P(r,n,e){return(P=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(r){return!1}}()?Reflect.construct:function(r,n,e){var t=[null];t.push.apply(t,n);var i=new(Function.bind.apply(r,t));return e&&S(i,e.prototype),i}).apply(null,arguments)}function S(r,n){return(S=Object.setPrototypeOf||function(r,n){return r.__proto__=n,r})(r,n)}function E(r){return function(r){if(Array.isArray(r)){for(var n=0,e=new Array(r.length);n<r.length;n++)e[n]=r[n];return e}}(r)||function(r){if(Symbol.iterator in Object(r)||"[object Arguments]"===Object.prototype.toString.call(r))return Array.from(r)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function T(r,n){for(var e=0;e<n.length;e++){var t=n[e];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(r,t.key,t)}}var k=["TEXTURE0","TEXTURE1","TEXTURE2","TEXTURE3","TEXTURE4","TEXTURE5","TEXTURE6","TEXTURE7"],D=function(){function r(n){!function(r,n){if(!(r instanceof n))throw new TypeError("Cannot call a class as a function")}(this,r),this.element=n,this.gl=n.canvasElt.getContext("webgl"),this.uniforms=[],this.textures=[],this.imports=["__global__"],this.program=null,this.shouldCompileProgram=!0,this.positionBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.positionBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,-1,-1,1,1,-1,1,1]),this.gl.STATIC_DRAW),this.addUniform("viewportSize","vec2",0,0),this.frameCount=0,this.addUniform("frameCount","int",0),this.startTime=new Date,this.addUniform("timeElapsed","float",0),this.addUniform("mousePosition","vec2",0,0),this.addUniform("mouseState","int",0)}var n,e,t;return n=r,(e=[{key:"getExtraFragmentCode",value:function(){var r="precision highp float;",n=!0,e=!1,t=void 0;try{for(var i,o=this.getUniforms()[Symbol.iterator]();!(n=(i=o.next()).done);n=!0){var a=i.value;r+="\n".concat(a.getUniformDeclaration())}}catch(r){e=!0,t=r}finally{try{n||null==o.return||o.return()}finally{if(e)throw t}}var c=!0,l=!1,s=void 0;try{for(var f,u=this.textures[Symbol.iterator]();!(c=(f=u.next()).done);c=!0){var v=f.value;r+="\n".concat(v.getUniformDeclaration())}}catch(r){l=!0,s=r}finally{try{c||null==u.return||u.return()}finally{if(l)throw s}}return r+=w.resolveCode(this.imports.map((function(r){return w.getImport(r)})))}},{key:"compileProgram",value:function(){this.shouldCompileProgram=!1;var r="void main() {\n\tgl_FragColor = vec4(gl_FragCoord.xy / viewportSize, 0., 1.);\n}";if(null!=this.element.fragmentShaderElt&&(r=this.element.fragmentShaderElt.textContent),r=this.getExtraFragmentCode()+"\n"+r,this.program=i.initShaderProgram(this.gl,"attribute vec2 position;\n\nvoid main() {\n\tgl_Position = vec4(position, 0., 0.);\n}",r),null!=this.program){var n=!0,e=!1,t=void 0;try{for(var o,a=this.getUniforms()[Symbol.iterator]();!(n=(o=a.next()).done);n=!0)o.value.loadUniformLocation(this.gl,this.program)}catch(r){e=!0,t=r}finally{try{n||null==a.return||a.return()}finally{if(e)throw t}}var c=!0,l=!1,s=void 0;try{for(var f,u=this.textures[Symbol.iterator]();!(c=(f=u.next()).done);c=!0)f.value.loadUniformLocation(this.gl,this.program)}catch(r){l=!0,s=r}finally{try{c||null==u.return||u.return()}finally{if(l)throw s}}}}},{key:"canRender",value:function(){return null!=this.program}},{key:"render",value:function(){if(this.shouldCompileProgram&&this.compileProgram(),this.canRender()){this.frameCount++,this.setUniform("frameCount",this.frameCount),this.setUniform("timeElapsed",(new Date-this.startTime)/1e3),this.gl.useProgram(this.program),this.bindTextures();var r=!0,n=!1,e=void 0;try{for(var t,i=this.getUniforms()[Symbol.iterator]();!(r=(t=i.next()).done);r=!0)t.value.setUniformValue(this.gl)}catch(r){n=!0,e=r}finally{try{r||null==i.return||i.return()}finally{if(n)throw e}}this.gl.clearColor(0,0,0,1),this.gl.clear(this.gl.COLOR_BUFFER_BIT);var o=this.gl.FLOAT,a=this.gl.getAttribLocation(this.program,"position");this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.positionBuffer),this.gl.vertexAttribPointer(a,2,o,!1,0,0),this.gl.enableVertexAttribArray(a),this.gl.drawArrays(this.gl.TRIANGLES,0,6)}}},{key:"bindTextures",value:function(){var r=0,n=!0,e=!1,t=void 0;try{for(var i,o=this.textures[Symbol.iterator]();!(n=(i=o.next()).done);n=!0){var a=i.value;if(r>k.length)break;a.update(this.gl);var c=this.gl[k[r]];this.gl.activeTexture(c),this.gl.bindTexture(this.gl.TEXTURE_2D,a.texture),this.gl.uniform1i(a.location,r),r++}}catch(r){e=!0,t=r}finally{try{n||null==o.return||o.return()}finally{if(e)throw t}}}},{key:"getUniforms",value:function(){var r=this.uniforms,n=!0,e=!1,t=void 0;try{for(var i,o=this.textures[Symbol.iterator]();!(n=(i=o.next()).done);n=!0){var a=i.value;r=[].concat(E(r),E(a.uniforms))}}catch(r){e=!0,t=r}finally{try{n||null==o.return||o.return()}finally{if(e)throw t}}return r}},{key:"addUniform",value:function(r,n){for(var e=arguments.length,t=new Array(e>2?e-2:0),i=2;i<e;i++)t[i-2]=arguments[i];this.uniforms.push(P(l,[r,n].concat(t))),this.shouldCompileProgram=!0}},{key:"getUniform",value:function(r){var n=!0,e=!1,t=void 0;try{for(var i,o=this.getUniforms()[Symbol.iterator]();!(n=(i=o.next()).done);n=!0){var a=i.value;if(a.name==r)return a}}catch(r){e=!0,t=r}finally{try{n||null==o.return||o.return()}finally{if(e)throw t}}return null}},{key:"setUniform",value:function(r){var n=this.getUniform(r);if(null!=n){for(var e=arguments.length,t=new Array(e>1?e-1:0),i=1;i<e;i++)t[i-1]=arguments[i];n.setValue.apply(n,t)}}},{key:"addTexture",value:function(){for(var r=arguments.length,n=new Array(r),e=0;e<r;e++)n[e]=arguments[e];var t=P(z,n);t.bindTexture(this.gl),this.textures.push(t)}},{key:"getTexture",value:function(r){var n=!0,e=!1,t=void 0;try{for(var i,o=this.textures[Symbol.iterator]();!(n=(i=o.next()).done);n=!0){var a=i.value;if(a.name==r)return a}}catch(r){e=!0,t=r}finally{try{n||null==o.return||o.return()}finally{if(e)throw t}}return null}},{key:"deleteTexture",value:function(r){var n=this.getTexture(r);null!=n&&(n.unbindTexture(this.gl),this.textures.splice(this.textures.indexOf(n),1))}}])&&T(n.prototype,e),t&&T(n,t),r}();function R(r){return(R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r})(r)}function C(r,n){for(var e=0;e<n.length;e++){var t=n[e];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(r,t.key,t)}}function U(r,n){return!n||"object"!==R(n)&&"function"!=typeof n?function(r){if(void 0===r)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return r}(r):n}function O(r){var n="function"==typeof Map?new Map:void 0;return(O=function(r){if(null===r||(e=r,-1===Function.toString.call(e).indexOf("[native code]")))return r;var e;if("function"!=typeof r)throw new TypeError("Super expression must either be null or a function");if(void 0!==n){if(n.has(r))return n.get(r);n.set(r,t)}function t(){return X(r,arguments,j(this).constructor)}return t.prototype=Object.create(r.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),A(t,r)})(r)}function X(r,n,e){return(X=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(r){return!1}}()?Reflect.construct:function(r,n,e){var t=[null];t.push.apply(t,n);var i=new(Function.bind.apply(r,t));return e&&A(i,e.prototype),i}).apply(null,arguments)}function A(r,n){return(A=Object.setPrototypeOf||function(r,n){return r.__proto__=n,r})(r,n)}function j(r){return(j=Object.setPrototypeOf?Object.getPrototypeOf:function(r){return r.__proto__||Object.getPrototypeOf(r)})(r)}var M=":host {\n\tposition: relative;\n\tdisplay: inline-block;\n\twidth: 250px;\n\theight: 250px;\n}\n\n:host > canvas {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n}",I=function(r){function n(){var r;return function(r,n){if(!(r instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(r=U(this,j(n).call(this))).shadow=r.attachShadow({mode:"open"}),r.styleElt=document.createElement("style"),r.styleElt.textContent=M,r.canvasElt=document.createElement("canvas"),r.shadow.appendChild(r.styleElt),r.shadow.appendChild(r.canvasElt),r.mounted=!1,r.loadingTextures=[],r.fragmentShaderElt=null,r}var e,t,i;return function(r,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");r.prototype=Object.create(n&&n.prototype,{constructor:{value:r,writable:!0,configurable:!0}}),n&&A(r,n)}(n,r),e=n,(t=[{key:"getMousePosition",value:function(r){return[r.x-this.rect.x,this.height-r.y+this.rect.y]}},{key:"connectedCallback",value:function(){var r=this;this.mounted=!0,this.shaderSketch=new D(this),this.onmousedown=function(n){r.setUniform("mousePosition",r.getMousePosition(n)),r.setUniform("mouseState",1)},this.onmousemove=function(n){r.setUniform("mousePosition",r.getMousePosition(n))},this.onmouseup=function(n){r.setUniform("mousePosition",r.getMousePosition(n)),r.setUniform("mouseState",0)},this.render()}},{key:"disconnectedCallback",value:function(){this.mounted=!1,this.shaderSketch=null,this.onmousedown=null,this.onmousemove=null,this.onmouseup=null}},{key:"updateChild",value:function(r){var n=this,e=r.child,t=r.add;switch(e.tagName.toLowerCase()){case"fragment-shader":this.fragmentShaderElt=t?e:null;break;case"shader-uniform":if(!t)break;var i=e.getAttribute("name"),o=e.getAttribute("type"),a=e.getAttribute("value");null==this.getUniform(i)?this.addUniform(i,o,a):this.setUniform(i,a);break;case"shader-import":var c=e.getAttribute("name");t?this.shaderSketch.imports.push(c):this.shaderSketch.imports.splice(this.shaderSketch.imports.indexOf(c),-1);break;case"shader-texture":var l=e.getAttribute("name"),s=e.getAttribute("src"),f=e.getAttribute("blending"),u=e.getAttribute("wrapping");if(t){if(null==this.shaderSketch.getTexture(l)&&-1==this.loadingTextures.indexOf(l)){this.loadingTextures.push(l);var v=new Image;v.onload=function(){n.addTexture(l,v,{blending:f,wrapping:u,update:!1})},v.src=s}}else this.shaderSketch.deleteTexture(l);break;case"shader-canvas-texture":var p=e.getAttribute("name"),d=e.getAttribute("selector"),y=e.getAttribute("blending"),x=e.getAttribute("wrapping");if(t){var g=document.querySelector(d);if(null==g)break;"shader-sketch"==g.tagName.toLowerCase()&&(g=g.canvasElt),this.addTexture(p,g,{blending:y,wrapping:x,update:!0})}else this.shaderSketch.deleteTexture(p)}this.shaderSketch.shouldCompileProgram=!0}},{key:"render",value:function(){var r=this;this.mounted&&requestAnimationFrame((function(){r.render()})),this.updateSize(),this.shaderSketch.render()}},{key:"updateSize",value:function(){this.rect=this.getBoundingClientRect();var r=this.rect,n=r.width,e=r.height,t=this.width,i=this.height;n==t&&e==i||(this.width=n,this.height=e,this.canvasElt.width=n,this.canvasElt.style.width=n>=1?n:1,this.canvasElt.height=e,this.canvasElt.style.height=e>=1?e:1,this.shaderSketch.gl.viewport(0,0,n,e),this.setUniform("viewportSize",n,e))}},{key:"addUniform",value:function(){var r;(r=this.shaderSketch).addUniform.apply(r,arguments)}},{key:"getUniform",value:function(){var r;return(r=this.shaderSketch).getUniform.apply(r,arguments)}},{key:"setUniform",value:function(){var r;(r=this.shaderSketch).setUniform.apply(r,arguments)}},{key:"addTexture",value:function(r,n,e){var t=e.blending,i=e.wrapping,o=e.update;this.shaderSketch.addTexture(r,n,{blending:t,wrapping:i,update:o}),this.shaderSketch.shouldCompileProgram=!0,this.loadingTextures.indexOf(r)>-1&&this.loadingTextures.splice(this.loadingTextures.indexOf(r),1)}}])&&C(e.prototype,t),i&&C(e,i),n}(O(HTMLElement));function L(r){return(L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r})(r)}function F(r,n){for(var e=0;e<n.length;e++){var t=n[e];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(r,t.key,t)}}function B(r,n){return!n||"object"!==L(n)&&"function"!=typeof n?function(r){if(void 0===r)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return r}(r):n}function q(r){var n="function"==typeof Map?new Map:void 0;return(q=function(r){if(null===r||(e=r,-1===Function.toString.call(e).indexOf("[native code]")))return r;var e;if("function"!=typeof r)throw new TypeError("Super expression must either be null or a function");if(void 0!==n){if(n.has(r))return n.get(r);n.set(r,t)}function t(){return N(r,arguments,H(this).constructor)}return t.prototype=Object.create(r.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),G(t,r)})(r)}function N(r,n,e){return(N=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(r){return!1}}()?Reflect.construct:function(r,n,e){var t=[null];t.push.apply(t,n);var i=new(Function.bind.apply(r,t));return e&&G(i,e.prototype),i}).apply(null,arguments)}function G(r,n){return(G=Object.setPrototypeOf||function(r,n){return r.__proto__=n,r})(r,n)}function H(r){return(H=Object.setPrototypeOf?Object.getPrototypeOf:function(r){return r.__proto__||Object.getPrototypeOf(r)})(r)}var V=function(r){function n(){return function(r,n){if(!(r instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),B(this,H(n).apply(this,arguments))}var e,t,i;return function(r,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");r.prototype=Object.create(n&&n.prototype,{constructor:{value:r,writable:!0,configurable:!0}}),n&&G(r,n)}(n,r),e=n,(t=[{key:"connectedCallback",value:function(){this.parentNode instanceof I&&(this.parent=this.parentNode,this.parent.updateChild({child:this,add:!0}))}},{key:"disconnectedCallback",value:function(){this.parent instanceof I&&(this.parent.updateChild({child:this,add:!1}),this.parent=null)}}])&&F(e.prototype,t),i&&F(e,i),n}(q(HTMLElement));function Y(r){return(Y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r})(r)}function K(r,n){if(!(r instanceof n))throw new TypeError("Cannot call a class as a function")}function Z(r,n){return!n||"object"!==Y(n)&&"function"!=typeof n?function(r){if(void 0===r)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return r}(r):n}function W(r){return(W=Object.setPrototypeOf?Object.getPrototypeOf:function(r){return r.__proto__||Object.getPrototypeOf(r)})(r)}function J(r,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");r.prototype=Object.create(n&&n.prototype,{constructor:{value:r,writable:!0,configurable:!0}}),n&&Q(r,n)}function Q(r,n){return(Q=Object.setPrototypeOf||function(r,n){return r.__proto__=n,r})(r,n)}customElements.define("shader-sketch",I),customElements.define("fragment-shader",function(r){function n(){return K(this,n),Z(this,W(n).apply(this,arguments))}return J(n,r),n}(V)),customElements.define("shader-uniform",function(r){function n(){return K(this,n),Z(this,W(n).apply(this,arguments))}return J(n,r),n}(V)),customElements.define("shader-import",function(r){function n(){return K(this,n),Z(this,W(n).apply(this,arguments))}return J(n,r),n}(V)),customElements.define("shader-texture",function(r){function n(){return K(this,n),Z(this,W(n).apply(this,arguments))}return J(n,r),n}(V)),customElements.define("shader-canvas-texture",function(r){function n(){return K(this,n),Z(this,W(n).apply(this,arguments))}return J(n,r),n}(V))}]);